// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: registration.proto
// Protobuf C++ Version: 6.31.0

#ifndef registration_2eproto_2epb_2eh
#define registration_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "connection.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_registration_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_registration_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_registration_2eproto;
}  // extern "C"
namespace core {
class PublishReply;
struct PublishReplyDefaultTypeInternal;
extern PublishReplyDefaultTypeInternal _PublishReply_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PublishReply_class_data_;
class PublishRequest;
struct PublishRequestDefaultTypeInternal;
extern PublishRequestDefaultTypeInternal _PublishRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PublishRequest_class_data_;
class ServiceClientReply;
struct ServiceClientReplyDefaultTypeInternal;
extern ServiceClientReplyDefaultTypeInternal _ServiceClientReply_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ServiceClientReply_class_data_;
class ServiceClientRequest;
struct ServiceClientRequestDefaultTypeInternal;
extern ServiceClientRequestDefaultTypeInternal _ServiceClientRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ServiceClientRequest_class_data_;
class ServiceServerReply;
struct ServiceServerReplyDefaultTypeInternal;
extern ServiceServerReplyDefaultTypeInternal _ServiceServerReply_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ServiceServerReply_class_data_;
class ServiceServerRequest;
struct ServiceServerRequestDefaultTypeInternal;
extern ServiceServerRequestDefaultTypeInternal _ServiceServerRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ServiceServerRequest_class_data_;
class SubscribeReply;
struct SubscribeReplyDefaultTypeInternal;
extern SubscribeReplyDefaultTypeInternal _SubscribeReply_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubscribeReply_class_data_;
class SubscribeRequest;
struct SubscribeRequestDefaultTypeInternal;
extern SubscribeRequestDefaultTypeInternal _SubscribeRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubscribeRequest_class_data_;
}  // namespace core
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace core {

// ===================================================================


// -------------------------------------------------------------------

class ServiceServerReply final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:core.ServiceServerReply) */ {
 public:
  inline ServiceServerReply() : ServiceServerReply(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ServiceServerReply* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ServiceServerReply));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ServiceServerReply(::google::protobuf::internal::ConstantInitialized);

  inline ServiceServerReply(const ServiceServerReply& from) : ServiceServerReply(nullptr, from) {}
  inline ServiceServerReply(ServiceServerReply&& from) noexcept
      : ServiceServerReply(nullptr, ::std::move(from)) {}
  inline ServiceServerReply& operator=(const ServiceServerReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServiceServerReply& operator=(ServiceServerReply&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServiceServerReply& default_instance() {
    return *reinterpret_cast<const ServiceServerReply*>(
        &_ServiceServerReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ServiceServerReply& a, ServiceServerReply& b) { a.Swap(&b); }
  inline void Swap(ServiceServerReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServiceServerReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServiceServerReply* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ServiceServerReply>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ServiceServerReply& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ServiceServerReply& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "core.ServiceServerReply"; }

 protected:
  explicit ServiceServerReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ServiceServerReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ServiceServerReply& from);
  ServiceServerReply(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ServiceServerReply&& from) noexcept
      : ServiceServerReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:core.ServiceServerReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ServiceServerReply& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_registration_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ServiceServerReply_class_data_;
// -------------------------------------------------------------------

class ServiceClientRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.ServiceClientRequest) */ {
 public:
  inline ServiceClientRequest() : ServiceClientRequest(nullptr) {}
  ~ServiceClientRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ServiceClientRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ServiceClientRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ServiceClientRequest(::google::protobuf::internal::ConstantInitialized);

  inline ServiceClientRequest(const ServiceClientRequest& from) : ServiceClientRequest(nullptr, from) {}
  inline ServiceClientRequest(ServiceClientRequest&& from) noexcept
      : ServiceClientRequest(nullptr, ::std::move(from)) {}
  inline ServiceClientRequest& operator=(const ServiceClientRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServiceClientRequest& operator=(ServiceClientRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServiceClientRequest& default_instance() {
    return *reinterpret_cast<const ServiceClientRequest*>(
        &_ServiceClientRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ServiceClientRequest& a, ServiceClientRequest& b) { a.Swap(&b); }
  inline void Swap(ServiceClientRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServiceClientRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServiceClientRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ServiceClientRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServiceClientRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ServiceClientRequest& from) { ServiceClientRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ServiceClientRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "core.ServiceClientRequest"; }

 protected:
  explicit ServiceClientRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ServiceClientRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ServiceClientRequest& from);
  ServiceClientRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ServiceClientRequest&& from) noexcept
      : ServiceClientRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kServiceNameFieldNumber = 1,
  };
  // string service_name = 1;
  void clear_service_name() ;
  const ::std::string& service_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_service_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_service_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_service_name();
  void set_allocated_service_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_service_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_service_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_service_name();

  public:
  // @@protoc_insertion_point(class_scope:core.ServiceClientRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 46,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ServiceClientRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr service_name_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registration_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ServiceClientRequest_class_data_;
// -------------------------------------------------------------------

class SubscribeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.SubscribeRequest) */ {
 public:
  inline SubscribeRequest() : SubscribeRequest(nullptr) {}
  ~SubscribeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeRequest(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeRequest(const SubscribeRequest& from) : SubscribeRequest(nullptr, from) {}
  inline SubscribeRequest(SubscribeRequest&& from) noexcept
      : SubscribeRequest(nullptr, ::std::move(from)) {}
  inline SubscribeRequest& operator=(const SubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeRequest& operator=(SubscribeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeRequest& default_instance() {
    return *reinterpret_cast<const SubscribeRequest*>(
        &_SubscribeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SubscribeRequest& a, SubscribeRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeRequest& from) { SubscribeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubscribeRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "core.SubscribeRequest"; }

 protected:
  explicit SubscribeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubscribeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscribeRequest& from);
  SubscribeRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubscribeRequest&& from) noexcept
      : SubscribeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTopicNameFieldNumber = 2,
    kEndpointFieldNumber = 1,
  };
  // string topic_name = 2;
  void clear_topic_name() ;
  const ::std::string& topic_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_topic_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_topic_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_topic_name();
  void set_allocated_topic_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_topic_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_topic_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_topic_name();

  public:
  // .core.EndPoint endpoint = 1;
  bool has_endpoint() const;
  void clear_endpoint() ;
  const ::core::EndPoint& endpoint() const;
  [[nodiscard]] ::core::EndPoint* PROTOBUF_NULLABLE release_endpoint();
  ::core::EndPoint* PROTOBUF_NONNULL mutable_endpoint();
  void set_allocated_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value);
  ::core::EndPoint* PROTOBUF_NULLABLE unsafe_arena_release_endpoint();

  private:
  const ::core::EndPoint& _internal_endpoint() const;
  ::core::EndPoint* PROTOBUF_NONNULL _internal_mutable_endpoint();

  public:
  // @@protoc_insertion_point(class_scope:core.SubscribeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 40,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubscribeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr topic_name_;
    ::core::EndPoint* PROTOBUF_NULLABLE endpoint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registration_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubscribeRequest_class_data_;
// -------------------------------------------------------------------

class SubscribeReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.SubscribeReply) */ {
 public:
  inline SubscribeReply() : SubscribeReply(nullptr) {}
  ~SubscribeReply() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeReply* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeReply));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeReply(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeReply(const SubscribeReply& from) : SubscribeReply(nullptr, from) {}
  inline SubscribeReply(SubscribeReply&& from) noexcept
      : SubscribeReply(nullptr, ::std::move(from)) {}
  inline SubscribeReply& operator=(const SubscribeReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeReply& operator=(SubscribeReply&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeReply& default_instance() {
    return *reinterpret_cast<const SubscribeReply*>(
        &_SubscribeReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SubscribeReply& a, SubscribeReply& b) { a.Swap(&b); }
  inline void Swap(SubscribeReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeReply* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeReply& from) { SubscribeReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubscribeReply* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "core.SubscribeReply"; }

 protected:
  explicit SubscribeReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubscribeReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscribeReply& from);
  SubscribeReply(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubscribeReply&& from) noexcept
      : SubscribeReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTopicNameFieldNumber = 3,
    kEndpointFieldNumber = 4,
  };
  // string topic_name = 3;
  void clear_topic_name() ;
  const ::std::string& topic_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_topic_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_topic_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_topic_name();
  void set_allocated_topic_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_topic_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_topic_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_topic_name();

  public:
  // .core.EndPoint endpoint = 4;
  bool has_endpoint() const;
  void clear_endpoint() ;
  const ::core::EndPoint& endpoint() const;
  [[nodiscard]] ::core::EndPoint* PROTOBUF_NULLABLE release_endpoint();
  ::core::EndPoint* PROTOBUF_NONNULL mutable_endpoint();
  void set_allocated_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value);
  ::core::EndPoint* PROTOBUF_NULLABLE unsafe_arena_release_endpoint();

  private:
  const ::core::EndPoint& _internal_endpoint() const;
  ::core::EndPoint* PROTOBUF_NONNULL _internal_mutable_endpoint();

  public:
  // @@protoc_insertion_point(class_scope:core.SubscribeReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 38,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubscribeReply& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr topic_name_;
    ::core::EndPoint* PROTOBUF_NULLABLE endpoint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registration_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubscribeReply_class_data_;
// -------------------------------------------------------------------

class ServiceServerRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.ServiceServerRequest) */ {
 public:
  inline ServiceServerRequest() : ServiceServerRequest(nullptr) {}
  ~ServiceServerRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ServiceServerRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ServiceServerRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ServiceServerRequest(::google::protobuf::internal::ConstantInitialized);

  inline ServiceServerRequest(const ServiceServerRequest& from) : ServiceServerRequest(nullptr, from) {}
  inline ServiceServerRequest(ServiceServerRequest&& from) noexcept
      : ServiceServerRequest(nullptr, ::std::move(from)) {}
  inline ServiceServerRequest& operator=(const ServiceServerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServiceServerRequest& operator=(ServiceServerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServiceServerRequest& default_instance() {
    return *reinterpret_cast<const ServiceServerRequest*>(
        &_ServiceServerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ServiceServerRequest& a, ServiceServerRequest& b) { a.Swap(&b); }
  inline void Swap(ServiceServerRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServiceServerRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServiceServerRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ServiceServerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServiceServerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ServiceServerRequest& from) { ServiceServerRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ServiceServerRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "core.ServiceServerRequest"; }

 protected:
  explicit ServiceServerRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ServiceServerRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ServiceServerRequest& from);
  ServiceServerRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ServiceServerRequest&& from) noexcept
      : ServiceServerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kServiceNameFieldNumber = 2,
    kEndpointFieldNumber = 1,
  };
  // string service_name = 2;
  void clear_service_name() ;
  const ::std::string& service_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_service_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_service_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_service_name();
  void set_allocated_service_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_service_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_service_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_service_name();

  public:
  // .core.EndPoint endpoint = 1;
  bool has_endpoint() const;
  void clear_endpoint() ;
  const ::core::EndPoint& endpoint() const;
  [[nodiscard]] ::core::EndPoint* PROTOBUF_NULLABLE release_endpoint();
  ::core::EndPoint* PROTOBUF_NONNULL mutable_endpoint();
  void set_allocated_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value);
  ::core::EndPoint* PROTOBUF_NULLABLE unsafe_arena_release_endpoint();

  private:
  const ::core::EndPoint& _internal_endpoint() const;
  ::core::EndPoint* PROTOBUF_NONNULL _internal_mutable_endpoint();

  public:
  // @@protoc_insertion_point(class_scope:core.ServiceServerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 46,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ServiceServerRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr service_name_;
    ::core::EndPoint* PROTOBUF_NULLABLE endpoint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registration_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ServiceServerRequest_class_data_;
// -------------------------------------------------------------------

class ServiceClientReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.ServiceClientReply) */ {
 public:
  inline ServiceClientReply() : ServiceClientReply(nullptr) {}
  ~ServiceClientReply() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ServiceClientReply* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ServiceClientReply));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ServiceClientReply(::google::protobuf::internal::ConstantInitialized);

  inline ServiceClientReply(const ServiceClientReply& from) : ServiceClientReply(nullptr, from) {}
  inline ServiceClientReply(ServiceClientReply&& from) noexcept
      : ServiceClientReply(nullptr, ::std::move(from)) {}
  inline ServiceClientReply& operator=(const ServiceClientReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServiceClientReply& operator=(ServiceClientReply&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServiceClientReply& default_instance() {
    return *reinterpret_cast<const ServiceClientReply*>(
        &_ServiceClientReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ServiceClientReply& a, ServiceClientReply& b) { a.Swap(&b); }
  inline void Swap(ServiceClientReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServiceClientReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServiceClientReply* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ServiceClientReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServiceClientReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ServiceClientReply& from) { ServiceClientReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ServiceClientReply* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "core.ServiceClientReply"; }

 protected:
  explicit ServiceClientReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ServiceClientReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ServiceClientReply& from);
  ServiceClientReply(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ServiceClientReply&& from) noexcept
      : ServiceClientReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEndpointFieldNumber = 2,
  };
  // .core.EndPoint endpoint = 2;
  bool has_endpoint() const;
  void clear_endpoint() ;
  const ::core::EndPoint& endpoint() const;
  [[nodiscard]] ::core::EndPoint* PROTOBUF_NULLABLE release_endpoint();
  ::core::EndPoint* PROTOBUF_NONNULL mutable_endpoint();
  void set_allocated_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value);
  ::core::EndPoint* PROTOBUF_NULLABLE unsafe_arena_release_endpoint();

  private:
  const ::core::EndPoint& _internal_endpoint() const;
  ::core::EndPoint* PROTOBUF_NONNULL _internal_mutable_endpoint();

  public:
  // @@protoc_insertion_point(class_scope:core.ServiceClientReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ServiceClientReply& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::core::EndPoint* PROTOBUF_NULLABLE endpoint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registration_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ServiceClientReply_class_data_;
// -------------------------------------------------------------------

class PublishRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.PublishRequest) */ {
 public:
  inline PublishRequest() : PublishRequest(nullptr) {}
  ~PublishRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PublishRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PublishRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PublishRequest(::google::protobuf::internal::ConstantInitialized);

  inline PublishRequest(const PublishRequest& from) : PublishRequest(nullptr, from) {}
  inline PublishRequest(PublishRequest&& from) noexcept
      : PublishRequest(nullptr, ::std::move(from)) {}
  inline PublishRequest& operator=(const PublishRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PublishRequest& operator=(PublishRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PublishRequest& default_instance() {
    return *reinterpret_cast<const PublishRequest*>(
        &_PublishRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(PublishRequest& a, PublishRequest& b) { a.Swap(&b); }
  inline void Swap(PublishRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PublishRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PublishRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PublishRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PublishRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PublishRequest& from) { PublishRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PublishRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "core.PublishRequest"; }

 protected:
  explicit PublishRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PublishRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PublishRequest& from);
  PublishRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PublishRequest&& from) noexcept
      : PublishRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTopicNameFieldNumber = 2,
    kEndpointFieldNumber = 1,
  };
  // string topic_name = 2;
  void clear_topic_name() ;
  const ::std::string& topic_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_topic_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_topic_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_topic_name();
  void set_allocated_topic_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_topic_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_topic_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_topic_name();

  public:
  // .core.EndPoint endpoint = 1;
  bool has_endpoint() const;
  void clear_endpoint() ;
  const ::core::EndPoint& endpoint() const;
  [[nodiscard]] ::core::EndPoint* PROTOBUF_NULLABLE release_endpoint();
  ::core::EndPoint* PROTOBUF_NONNULL mutable_endpoint();
  void set_allocated_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value);
  ::core::EndPoint* PROTOBUF_NULLABLE unsafe_arena_release_endpoint();

  private:
  const ::core::EndPoint& _internal_endpoint() const;
  ::core::EndPoint* PROTOBUF_NONNULL _internal_mutable_endpoint();

  public:
  // @@protoc_insertion_point(class_scope:core.PublishRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 38,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PublishRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr topic_name_;
    ::core::EndPoint* PROTOBUF_NULLABLE endpoint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registration_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PublishRequest_class_data_;
// -------------------------------------------------------------------

class PublishReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.PublishReply) */ {
 public:
  inline PublishReply() : PublishReply(nullptr) {}
  ~PublishReply() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PublishReply* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PublishReply));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PublishReply(::google::protobuf::internal::ConstantInitialized);

  inline PublishReply(const PublishReply& from) : PublishReply(nullptr, from) {}
  inline PublishReply(PublishReply&& from) noexcept
      : PublishReply(nullptr, ::std::move(from)) {}
  inline PublishReply& operator=(const PublishReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline PublishReply& operator=(PublishReply&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PublishReply& default_instance() {
    return *reinterpret_cast<const PublishReply*>(
        &_PublishReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(PublishReply& a, PublishReply& b) { a.Swap(&b); }
  inline void Swap(PublishReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PublishReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PublishReply* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PublishReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PublishReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PublishReply& from) { PublishReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PublishReply* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "core.PublishReply"; }

 protected:
  explicit PublishReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PublishReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PublishReply& from);
  PublishReply(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PublishReply&& from) noexcept
      : PublishReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTopicNameFieldNumber = 3,
    kEndpointFieldNumber = 4,
  };
  // string topic_name = 3;
  void clear_topic_name() ;
  const ::std::string& topic_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_topic_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_topic_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_topic_name();
  void set_allocated_topic_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_topic_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_topic_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_topic_name();

  public:
  // .core.EndPoint endpoint = 4;
  bool has_endpoint() const;
  void clear_endpoint() ;
  const ::core::EndPoint& endpoint() const;
  [[nodiscard]] ::core::EndPoint* PROTOBUF_NULLABLE release_endpoint();
  ::core::EndPoint* PROTOBUF_NONNULL mutable_endpoint();
  void set_allocated_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value);
  ::core::EndPoint* PROTOBUF_NULLABLE unsafe_arena_release_endpoint();

  private:
  const ::core::EndPoint& _internal_endpoint() const;
  ::core::EndPoint* PROTOBUF_NONNULL _internal_mutable_endpoint();

  public:
  // @@protoc_insertion_point(class_scope:core.PublishReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 36,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PublishReply& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr topic_name_;
    ::core::EndPoint* PROTOBUF_NULLABLE endpoint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_registration_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PublishReply_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SubscribeRequest

// .core.EndPoint endpoint = 1;
inline bool SubscribeRequest::has_endpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.endpoint_ != nullptr);
  return value;
}
inline const ::core::EndPoint& SubscribeRequest::_internal_endpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::core::EndPoint* p = _impl_.endpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::core::EndPoint&>(::core::_EndPoint_default_instance_);
}
inline const ::core::EndPoint& SubscribeRequest::endpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.SubscribeRequest.endpoint)
  return _internal_endpoint();
}
inline void SubscribeRequest::unsafe_arena_set_allocated_endpoint(
    ::core::EndPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endpoint_);
  }
  _impl_.endpoint_ = reinterpret_cast<::core::EndPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:core.SubscribeRequest.endpoint)
}
inline ::core::EndPoint* PROTOBUF_NULLABLE SubscribeRequest::release_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::core::EndPoint* released = _impl_.endpoint_;
  _impl_.endpoint_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::core::EndPoint* PROTOBUF_NULLABLE SubscribeRequest::unsafe_arena_release_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.SubscribeRequest.endpoint)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::core::EndPoint* temp = _impl_.endpoint_;
  _impl_.endpoint_ = nullptr;
  return temp;
}
inline ::core::EndPoint* PROTOBUF_NONNULL SubscribeRequest::_internal_mutable_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.endpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::core::EndPoint>(GetArena());
    _impl_.endpoint_ = reinterpret_cast<::core::EndPoint*>(p);
  }
  return _impl_.endpoint_;
}
inline ::core::EndPoint* PROTOBUF_NONNULL SubscribeRequest::mutable_endpoint()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::core::EndPoint* _msg = _internal_mutable_endpoint();
  // @@protoc_insertion_point(field_mutable:core.SubscribeRequest.endpoint)
  return _msg;
}
inline void SubscribeRequest::set_allocated_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.endpoint_ = reinterpret_cast<::core::EndPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:core.SubscribeRequest.endpoint)
}

// string topic_name = 2;
inline void SubscribeRequest::clear_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topic_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SubscribeRequest::topic_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.SubscribeRequest.topic_name)
  return _internal_topic_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SubscribeRequest::set_topic_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.topic_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.SubscribeRequest.topic_name)
}
inline ::std::string* PROTOBUF_NONNULL SubscribeRequest::mutable_topic_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_topic_name();
  // @@protoc_insertion_point(field_mutable:core.SubscribeRequest.topic_name)
  return _s;
}
inline const ::std::string& SubscribeRequest::_internal_topic_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topic_name_.Get();
}
inline void SubscribeRequest::_internal_set_topic_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.topic_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SubscribeRequest::_internal_mutable_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.topic_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SubscribeRequest::release_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.SubscribeRequest.topic_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.topic_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.topic_name_.Set("", GetArena());
  }
  return released;
}
inline void SubscribeRequest::set_allocated_topic_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.topic_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.topic_name_.IsDefault()) {
    _impl_.topic_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:core.SubscribeRequest.topic_name)
}

// -------------------------------------------------------------------

// SubscribeReply

// string topic_name = 3;
inline void SubscribeReply::clear_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topic_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SubscribeReply::topic_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.SubscribeReply.topic_name)
  return _internal_topic_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SubscribeReply::set_topic_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.topic_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.SubscribeReply.topic_name)
}
inline ::std::string* PROTOBUF_NONNULL SubscribeReply::mutable_topic_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_topic_name();
  // @@protoc_insertion_point(field_mutable:core.SubscribeReply.topic_name)
  return _s;
}
inline const ::std::string& SubscribeReply::_internal_topic_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topic_name_.Get();
}
inline void SubscribeReply::_internal_set_topic_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.topic_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SubscribeReply::_internal_mutable_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.topic_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SubscribeReply::release_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.SubscribeReply.topic_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.topic_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.topic_name_.Set("", GetArena());
  }
  return released;
}
inline void SubscribeReply::set_allocated_topic_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.topic_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.topic_name_.IsDefault()) {
    _impl_.topic_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:core.SubscribeReply.topic_name)
}

// .core.EndPoint endpoint = 4;
inline bool SubscribeReply::has_endpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.endpoint_ != nullptr);
  return value;
}
inline const ::core::EndPoint& SubscribeReply::_internal_endpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::core::EndPoint* p = _impl_.endpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::core::EndPoint&>(::core::_EndPoint_default_instance_);
}
inline const ::core::EndPoint& SubscribeReply::endpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.SubscribeReply.endpoint)
  return _internal_endpoint();
}
inline void SubscribeReply::unsafe_arena_set_allocated_endpoint(
    ::core::EndPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endpoint_);
  }
  _impl_.endpoint_ = reinterpret_cast<::core::EndPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:core.SubscribeReply.endpoint)
}
inline ::core::EndPoint* PROTOBUF_NULLABLE SubscribeReply::release_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::core::EndPoint* released = _impl_.endpoint_;
  _impl_.endpoint_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::core::EndPoint* PROTOBUF_NULLABLE SubscribeReply::unsafe_arena_release_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.SubscribeReply.endpoint)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::core::EndPoint* temp = _impl_.endpoint_;
  _impl_.endpoint_ = nullptr;
  return temp;
}
inline ::core::EndPoint* PROTOBUF_NONNULL SubscribeReply::_internal_mutable_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.endpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::core::EndPoint>(GetArena());
    _impl_.endpoint_ = reinterpret_cast<::core::EndPoint*>(p);
  }
  return _impl_.endpoint_;
}
inline ::core::EndPoint* PROTOBUF_NONNULL SubscribeReply::mutable_endpoint()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::core::EndPoint* _msg = _internal_mutable_endpoint();
  // @@protoc_insertion_point(field_mutable:core.SubscribeReply.endpoint)
  return _msg;
}
inline void SubscribeReply::set_allocated_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.endpoint_ = reinterpret_cast<::core::EndPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:core.SubscribeReply.endpoint)
}

// -------------------------------------------------------------------

// PublishRequest

// .core.EndPoint endpoint = 1;
inline bool PublishRequest::has_endpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.endpoint_ != nullptr);
  return value;
}
inline const ::core::EndPoint& PublishRequest::_internal_endpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::core::EndPoint* p = _impl_.endpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::core::EndPoint&>(::core::_EndPoint_default_instance_);
}
inline const ::core::EndPoint& PublishRequest::endpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.PublishRequest.endpoint)
  return _internal_endpoint();
}
inline void PublishRequest::unsafe_arena_set_allocated_endpoint(
    ::core::EndPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endpoint_);
  }
  _impl_.endpoint_ = reinterpret_cast<::core::EndPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:core.PublishRequest.endpoint)
}
inline ::core::EndPoint* PROTOBUF_NULLABLE PublishRequest::release_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::core::EndPoint* released = _impl_.endpoint_;
  _impl_.endpoint_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::core::EndPoint* PROTOBUF_NULLABLE PublishRequest::unsafe_arena_release_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.PublishRequest.endpoint)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::core::EndPoint* temp = _impl_.endpoint_;
  _impl_.endpoint_ = nullptr;
  return temp;
}
inline ::core::EndPoint* PROTOBUF_NONNULL PublishRequest::_internal_mutable_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.endpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::core::EndPoint>(GetArena());
    _impl_.endpoint_ = reinterpret_cast<::core::EndPoint*>(p);
  }
  return _impl_.endpoint_;
}
inline ::core::EndPoint* PROTOBUF_NONNULL PublishRequest::mutable_endpoint()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::core::EndPoint* _msg = _internal_mutable_endpoint();
  // @@protoc_insertion_point(field_mutable:core.PublishRequest.endpoint)
  return _msg;
}
inline void PublishRequest::set_allocated_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.endpoint_ = reinterpret_cast<::core::EndPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:core.PublishRequest.endpoint)
}

// string topic_name = 2;
inline void PublishRequest::clear_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topic_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PublishRequest::topic_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.PublishRequest.topic_name)
  return _internal_topic_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PublishRequest::set_topic_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.topic_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.PublishRequest.topic_name)
}
inline ::std::string* PROTOBUF_NONNULL PublishRequest::mutable_topic_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_topic_name();
  // @@protoc_insertion_point(field_mutable:core.PublishRequest.topic_name)
  return _s;
}
inline const ::std::string& PublishRequest::_internal_topic_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topic_name_.Get();
}
inline void PublishRequest::_internal_set_topic_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.topic_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PublishRequest::_internal_mutable_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.topic_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PublishRequest::release_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.PublishRequest.topic_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.topic_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.topic_name_.Set("", GetArena());
  }
  return released;
}
inline void PublishRequest::set_allocated_topic_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.topic_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.topic_name_.IsDefault()) {
    _impl_.topic_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:core.PublishRequest.topic_name)
}

// -------------------------------------------------------------------

// PublishReply

// string topic_name = 3;
inline void PublishReply::clear_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topic_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PublishReply::topic_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.PublishReply.topic_name)
  return _internal_topic_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PublishReply::set_topic_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.topic_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.PublishReply.topic_name)
}
inline ::std::string* PROTOBUF_NONNULL PublishReply::mutable_topic_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_topic_name();
  // @@protoc_insertion_point(field_mutable:core.PublishReply.topic_name)
  return _s;
}
inline const ::std::string& PublishReply::_internal_topic_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topic_name_.Get();
}
inline void PublishReply::_internal_set_topic_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.topic_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PublishReply::_internal_mutable_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.topic_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PublishReply::release_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.PublishReply.topic_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.topic_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.topic_name_.Set("", GetArena());
  }
  return released;
}
inline void PublishReply::set_allocated_topic_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.topic_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.topic_name_.IsDefault()) {
    _impl_.topic_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:core.PublishReply.topic_name)
}

// .core.EndPoint endpoint = 4;
inline bool PublishReply::has_endpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.endpoint_ != nullptr);
  return value;
}
inline const ::core::EndPoint& PublishReply::_internal_endpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::core::EndPoint* p = _impl_.endpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::core::EndPoint&>(::core::_EndPoint_default_instance_);
}
inline const ::core::EndPoint& PublishReply::endpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.PublishReply.endpoint)
  return _internal_endpoint();
}
inline void PublishReply::unsafe_arena_set_allocated_endpoint(
    ::core::EndPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endpoint_);
  }
  _impl_.endpoint_ = reinterpret_cast<::core::EndPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:core.PublishReply.endpoint)
}
inline ::core::EndPoint* PROTOBUF_NULLABLE PublishReply::release_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::core::EndPoint* released = _impl_.endpoint_;
  _impl_.endpoint_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::core::EndPoint* PROTOBUF_NULLABLE PublishReply::unsafe_arena_release_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.PublishReply.endpoint)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::core::EndPoint* temp = _impl_.endpoint_;
  _impl_.endpoint_ = nullptr;
  return temp;
}
inline ::core::EndPoint* PROTOBUF_NONNULL PublishReply::_internal_mutable_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.endpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::core::EndPoint>(GetArena());
    _impl_.endpoint_ = reinterpret_cast<::core::EndPoint*>(p);
  }
  return _impl_.endpoint_;
}
inline ::core::EndPoint* PROTOBUF_NONNULL PublishReply::mutable_endpoint()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::core::EndPoint* _msg = _internal_mutable_endpoint();
  // @@protoc_insertion_point(field_mutable:core.PublishReply.endpoint)
  return _msg;
}
inline void PublishReply::set_allocated_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.endpoint_ = reinterpret_cast<::core::EndPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:core.PublishReply.endpoint)
}

// -------------------------------------------------------------------

// ServiceServerRequest

// .core.EndPoint endpoint = 1;
inline bool ServiceServerRequest::has_endpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.endpoint_ != nullptr);
  return value;
}
inline const ::core::EndPoint& ServiceServerRequest::_internal_endpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::core::EndPoint* p = _impl_.endpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::core::EndPoint&>(::core::_EndPoint_default_instance_);
}
inline const ::core::EndPoint& ServiceServerRequest::endpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.ServiceServerRequest.endpoint)
  return _internal_endpoint();
}
inline void ServiceServerRequest::unsafe_arena_set_allocated_endpoint(
    ::core::EndPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endpoint_);
  }
  _impl_.endpoint_ = reinterpret_cast<::core::EndPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:core.ServiceServerRequest.endpoint)
}
inline ::core::EndPoint* PROTOBUF_NULLABLE ServiceServerRequest::release_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::core::EndPoint* released = _impl_.endpoint_;
  _impl_.endpoint_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::core::EndPoint* PROTOBUF_NULLABLE ServiceServerRequest::unsafe_arena_release_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.ServiceServerRequest.endpoint)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::core::EndPoint* temp = _impl_.endpoint_;
  _impl_.endpoint_ = nullptr;
  return temp;
}
inline ::core::EndPoint* PROTOBUF_NONNULL ServiceServerRequest::_internal_mutable_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.endpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::core::EndPoint>(GetArena());
    _impl_.endpoint_ = reinterpret_cast<::core::EndPoint*>(p);
  }
  return _impl_.endpoint_;
}
inline ::core::EndPoint* PROTOBUF_NONNULL ServiceServerRequest::mutable_endpoint()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::core::EndPoint* _msg = _internal_mutable_endpoint();
  // @@protoc_insertion_point(field_mutable:core.ServiceServerRequest.endpoint)
  return _msg;
}
inline void ServiceServerRequest::set_allocated_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.endpoint_ = reinterpret_cast<::core::EndPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:core.ServiceServerRequest.endpoint)
}

// string service_name = 2;
inline void ServiceServerRequest::clear_service_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.service_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ServiceServerRequest::service_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.ServiceServerRequest.service_name)
  return _internal_service_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ServiceServerRequest::set_service_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.service_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.ServiceServerRequest.service_name)
}
inline ::std::string* PROTOBUF_NONNULL ServiceServerRequest::mutable_service_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_service_name();
  // @@protoc_insertion_point(field_mutable:core.ServiceServerRequest.service_name)
  return _s;
}
inline const ::std::string& ServiceServerRequest::_internal_service_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.service_name_.Get();
}
inline void ServiceServerRequest::_internal_set_service_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.service_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ServiceServerRequest::_internal_mutable_service_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.service_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ServiceServerRequest::release_service_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.ServiceServerRequest.service_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.service_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.service_name_.Set("", GetArena());
  }
  return released;
}
inline void ServiceServerRequest::set_allocated_service_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.service_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.service_name_.IsDefault()) {
    _impl_.service_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:core.ServiceServerRequest.service_name)
}

// -------------------------------------------------------------------

// ServiceServerReply

// -------------------------------------------------------------------

// ServiceClientRequest

// string service_name = 1;
inline void ServiceClientRequest::clear_service_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.service_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ServiceClientRequest::service_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.ServiceClientRequest.service_name)
  return _internal_service_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ServiceClientRequest::set_service_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.service_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.ServiceClientRequest.service_name)
}
inline ::std::string* PROTOBUF_NONNULL ServiceClientRequest::mutable_service_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_service_name();
  // @@protoc_insertion_point(field_mutable:core.ServiceClientRequest.service_name)
  return _s;
}
inline const ::std::string& ServiceClientRequest::_internal_service_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.service_name_.Get();
}
inline void ServiceClientRequest::_internal_set_service_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.service_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ServiceClientRequest::_internal_mutable_service_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.service_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ServiceClientRequest::release_service_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.ServiceClientRequest.service_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.service_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.service_name_.Set("", GetArena());
  }
  return released;
}
inline void ServiceClientRequest::set_allocated_service_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.service_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.service_name_.IsDefault()) {
    _impl_.service_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:core.ServiceClientRequest.service_name)
}

// -------------------------------------------------------------------

// ServiceClientReply

// .core.EndPoint endpoint = 2;
inline bool ServiceClientReply::has_endpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.endpoint_ != nullptr);
  return value;
}
inline const ::core::EndPoint& ServiceClientReply::_internal_endpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::core::EndPoint* p = _impl_.endpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::core::EndPoint&>(::core::_EndPoint_default_instance_);
}
inline const ::core::EndPoint& ServiceClientReply::endpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.ServiceClientReply.endpoint)
  return _internal_endpoint();
}
inline void ServiceClientReply::unsafe_arena_set_allocated_endpoint(
    ::core::EndPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endpoint_);
  }
  _impl_.endpoint_ = reinterpret_cast<::core::EndPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:core.ServiceClientReply.endpoint)
}
inline ::core::EndPoint* PROTOBUF_NULLABLE ServiceClientReply::release_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::core::EndPoint* released = _impl_.endpoint_;
  _impl_.endpoint_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::core::EndPoint* PROTOBUF_NULLABLE ServiceClientReply::unsafe_arena_release_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.ServiceClientReply.endpoint)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::core::EndPoint* temp = _impl_.endpoint_;
  _impl_.endpoint_ = nullptr;
  return temp;
}
inline ::core::EndPoint* PROTOBUF_NONNULL ServiceClientReply::_internal_mutable_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.endpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::core::EndPoint>(GetArena());
    _impl_.endpoint_ = reinterpret_cast<::core::EndPoint*>(p);
  }
  return _impl_.endpoint_;
}
inline ::core::EndPoint* PROTOBUF_NONNULL ServiceClientReply::mutable_endpoint()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::core::EndPoint* _msg = _internal_mutable_endpoint();
  // @@protoc_insertion_point(field_mutable:core.ServiceClientReply.endpoint)
  return _msg;
}
inline void ServiceClientReply::set_allocated_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.endpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.endpoint_ = reinterpret_cast<::core::EndPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:core.ServiceClientReply.endpoint)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace core


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // registration_2eproto_2epb_2eh
