// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: connection.proto
// Protobuf C++ Version: 6.31.0

#ifndef connection_2eproto_2epb_2eh
#define connection_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_connection_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_connection_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_connection_2eproto;
}  // extern "C"
namespace core {
class EndPoint;
struct EndPointDefaultTypeInternal;
extern EndPointDefaultTypeInternal _EndPoint_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull EndPoint_class_data_;
class PublisherReply;
struct PublisherReplyDefaultTypeInternal;
extern PublisherReplyDefaultTypeInternal _PublisherReply_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PublisherReply_class_data_;
class PublisherRequest;
struct PublisherRequestDefaultTypeInternal;
extern PublisherRequestDefaultTypeInternal _PublisherRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PublisherRequest_class_data_;
class SubscriberReply;
struct SubscriberReplyDefaultTypeInternal;
extern SubscriberReplyDefaultTypeInternal _SubscriberReply_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubscriberReply_class_data_;
class SubscriberRequest;
struct SubscriberRequestDefaultTypeInternal;
extern SubscriberRequestDefaultTypeInternal _SubscriberRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubscriberRequest_class_data_;
}  // namespace core
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace core {

// ===================================================================


// -------------------------------------------------------------------

class SubscriberReply final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:core.SubscriberReply) */ {
 public:
  inline SubscriberReply() : SubscriberReply(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscriberReply* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscriberReply));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscriberReply(::google::protobuf::internal::ConstantInitialized);

  inline SubscriberReply(const SubscriberReply& from) : SubscriberReply(nullptr, from) {}
  inline SubscriberReply(SubscriberReply&& from) noexcept
      : SubscriberReply(nullptr, ::std::move(from)) {}
  inline SubscriberReply& operator=(const SubscriberReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscriberReply& operator=(SubscriberReply&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscriberReply& default_instance() {
    return *reinterpret_cast<const SubscriberReply*>(
        &_SubscriberReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SubscriberReply& a, SubscriberReply& b) { a.Swap(&b); }
  inline void Swap(SubscriberReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscriberReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscriberReply* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscriberReply>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscriberReply& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscriberReply& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "core.SubscriberReply"; }

 protected:
  explicit SubscriberReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubscriberReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscriberReply& from);
  SubscriberReply(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubscriberReply&& from) noexcept
      : SubscriberReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:core.SubscriberReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubscriberReply& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_connection_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubscriberReply_class_data_;
// -------------------------------------------------------------------

class PublisherRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.PublisherRequest) */ {
 public:
  inline PublisherRequest() : PublisherRequest(nullptr) {}
  ~PublisherRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PublisherRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PublisherRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PublisherRequest(::google::protobuf::internal::ConstantInitialized);

  inline PublisherRequest(const PublisherRequest& from) : PublisherRequest(nullptr, from) {}
  inline PublisherRequest(PublisherRequest&& from) noexcept
      : PublisherRequest(nullptr, ::std::move(from)) {}
  inline PublisherRequest& operator=(const PublisherRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PublisherRequest& operator=(PublisherRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PublisherRequest& default_instance() {
    return *reinterpret_cast<const PublisherRequest*>(
        &_PublisherRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(PublisherRequest& a, PublisherRequest& b) { a.Swap(&b); }
  inline void Swap(PublisherRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PublisherRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PublisherRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PublisherRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PublisherRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PublisherRequest& from) { PublisherRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PublisherRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "core.PublisherRequest"; }

 protected:
  explicit PublisherRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PublisherRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PublisherRequest& from);
  PublisherRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PublisherRequest&& from) noexcept
      : PublisherRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTopicNameFieldNumber = 1,
  };
  // string topic_name = 1;
  void clear_topic_name() ;
  const ::std::string& topic_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_topic_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_topic_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_topic_name();
  void set_allocated_topic_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_topic_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_topic_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_topic_name();

  public:
  // @@protoc_insertion_point(class_scope:core.PublisherRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 40,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PublisherRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr topic_name_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_connection_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PublisherRequest_class_data_;
// -------------------------------------------------------------------

class EndPoint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.EndPoint) */ {
 public:
  inline EndPoint() : EndPoint(nullptr) {}
  ~EndPoint() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EndPoint* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EndPoint));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EndPoint(::google::protobuf::internal::ConstantInitialized);

  inline EndPoint(const EndPoint& from) : EndPoint(nullptr, from) {}
  inline EndPoint(EndPoint&& from) noexcept
      : EndPoint(nullptr, ::std::move(from)) {}
  inline EndPoint& operator=(const EndPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline EndPoint& operator=(EndPoint&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EndPoint& default_instance() {
    return *reinterpret_cast<const EndPoint*>(
        &_EndPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(EndPoint& a, EndPoint& b) { a.Swap(&b); }
  inline void Swap(EndPoint* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EndPoint* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EndPoint* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EndPoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EndPoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EndPoint& from) { EndPoint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EndPoint* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "core.EndPoint"; }

 protected:
  explicit EndPoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  EndPoint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const EndPoint& from);
  EndPoint(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, EndPoint&& from) noexcept
      : EndPoint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIpFieldNumber = 1,
    kPortFieldNumber = 2,
  };
  // string ip = 1;
  void clear_ip() ;
  const ::std::string& ip() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_ip(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_ip();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_ip();
  void set_allocated_ip(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_ip() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_ip(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_ip();

  public:
  // uint32 port = 2;
  void clear_port() ;
  ::uint32_t port() const;
  void set_port(::uint32_t value);

  private:
  ::uint32_t _internal_port() const;
  void _internal_set_port(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:core.EndPoint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 24,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const EndPoint& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr ip_;
    ::uint32_t port_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_connection_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull EndPoint_class_data_;
// -------------------------------------------------------------------

class SubscriberRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.SubscriberRequest) */ {
 public:
  inline SubscriberRequest() : SubscriberRequest(nullptr) {}
  ~SubscriberRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscriberRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscriberRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscriberRequest(::google::protobuf::internal::ConstantInitialized);

  inline SubscriberRequest(const SubscriberRequest& from) : SubscriberRequest(nullptr, from) {}
  inline SubscriberRequest(SubscriberRequest&& from) noexcept
      : SubscriberRequest(nullptr, ::std::move(from)) {}
  inline SubscriberRequest& operator=(const SubscriberRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscriberRequest& operator=(SubscriberRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscriberRequest& default_instance() {
    return *reinterpret_cast<const SubscriberRequest*>(
        &_SubscriberRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SubscriberRequest& a, SubscriberRequest& b) { a.Swap(&b); }
  inline void Swap(SubscriberRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscriberRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscriberRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubscriberRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscriberRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscriberRequest& from) { SubscriberRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubscriberRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "core.SubscriberRequest"; }

 protected:
  explicit SubscriberRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubscriberRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscriberRequest& from);
  SubscriberRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubscriberRequest&& from) noexcept
      : SubscriberRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTopicNameFieldNumber = 2,
    kTcpEndpointFieldNumber = 1,
    kRateFieldNumber = 3,
  };
  // string topic_name = 2;
  void clear_topic_name() ;
  const ::std::string& topic_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_topic_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_topic_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_topic_name();
  void set_allocated_topic_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_topic_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_topic_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_topic_name();

  public:
  // .core.EndPoint tcp_endpoint = 1;
  bool has_tcp_endpoint() const;
  void clear_tcp_endpoint() ;
  const ::core::EndPoint& tcp_endpoint() const;
  [[nodiscard]] ::core::EndPoint* PROTOBUF_NULLABLE release_tcp_endpoint();
  ::core::EndPoint* PROTOBUF_NONNULL mutable_tcp_endpoint();
  void set_allocated_tcp_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_tcp_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value);
  ::core::EndPoint* PROTOBUF_NULLABLE unsafe_arena_release_tcp_endpoint();

  private:
  const ::core::EndPoint& _internal_tcp_endpoint() const;
  ::core::EndPoint* PROTOBUF_NONNULL _internal_mutable_tcp_endpoint();

  public:
  // float rate = 3;
  void clear_rate() ;
  float rate() const;
  void set_rate(float value);

  private:
  float _internal_rate() const;
  void _internal_set_rate(float value);

  public:
  // @@protoc_insertion_point(class_scope:core.SubscriberRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 41,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubscriberRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr topic_name_;
    ::core::EndPoint* PROTOBUF_NULLABLE tcp_endpoint_;
    float rate_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_connection_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubscriberRequest_class_data_;
// -------------------------------------------------------------------

class PublisherReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:core.PublisherReply) */ {
 public:
  inline PublisherReply() : PublisherReply(nullptr) {}
  ~PublisherReply() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PublisherReply* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PublisherReply));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PublisherReply(::google::protobuf::internal::ConstantInitialized);

  inline PublisherReply(const PublisherReply& from) : PublisherReply(nullptr, from) {}
  inline PublisherReply(PublisherReply&& from) noexcept
      : PublisherReply(nullptr, ::std::move(from)) {}
  inline PublisherReply& operator=(const PublisherReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline PublisherReply& operator=(PublisherReply&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PublisherReply& default_instance() {
    return *reinterpret_cast<const PublisherReply*>(
        &_PublisherReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(PublisherReply& a, PublisherReply& b) { a.Swap(&b); }
  inline void Swap(PublisherReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PublisherReply* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PublisherReply* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PublisherReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PublisherReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PublisherReply& from) { PublisherReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PublisherReply* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "core.PublisherReply"; }

 protected:
  explicit PublisherReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PublisherReply(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PublisherReply& from);
  PublisherReply(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PublisherReply&& from) noexcept
      : PublisherReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTopicNameFieldNumber = 2,
    kTcpEndpointFieldNumber = 3,
    kRateFieldNumber = 4,
  };
  // string topic_name = 2;
  void clear_topic_name() ;
  const ::std::string& topic_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_topic_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_topic_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_topic_name();
  void set_allocated_topic_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_topic_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_topic_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_topic_name();

  public:
  // .core.EndPoint tcp_endpoint = 3;
  bool has_tcp_endpoint() const;
  void clear_tcp_endpoint() ;
  const ::core::EndPoint& tcp_endpoint() const;
  [[nodiscard]] ::core::EndPoint* PROTOBUF_NULLABLE release_tcp_endpoint();
  ::core::EndPoint* PROTOBUF_NONNULL mutable_tcp_endpoint();
  void set_allocated_tcp_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_tcp_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value);
  ::core::EndPoint* PROTOBUF_NULLABLE unsafe_arena_release_tcp_endpoint();

  private:
  const ::core::EndPoint& _internal_tcp_endpoint() const;
  ::core::EndPoint* PROTOBUF_NONNULL _internal_mutable_tcp_endpoint();

  public:
  // float rate = 4;
  void clear_rate() ;
  float rate() const;
  void set_rate(float value);

  private:
  float _internal_rate() const;
  void _internal_set_rate(float value);

  public:
  // @@protoc_insertion_point(class_scope:core.PublisherReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 38,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PublisherReply& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr topic_name_;
    ::core::EndPoint* PROTOBUF_NULLABLE tcp_endpoint_;
    float rate_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_connection_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PublisherReply_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EndPoint

// string ip = 1;
inline void EndPoint::clear_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& EndPoint::ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.EndPoint.ip)
  return _internal_ip();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void EndPoint::set_ip(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.EndPoint.ip)
}
inline ::std::string* PROTOBUF_NONNULL EndPoint::mutable_ip()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_ip();
  // @@protoc_insertion_point(field_mutable:core.EndPoint.ip)
  return _s;
}
inline const ::std::string& EndPoint::_internal_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ip_.Get();
}
inline void EndPoint::_internal_set_ip(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.ip_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL EndPoint::_internal_mutable_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.ip_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE EndPoint::release_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.EndPoint.ip)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.ip_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.ip_.Set("", GetArena());
  }
  return released;
}
inline void EndPoint::set_allocated_ip(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.ip_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ip_.IsDefault()) {
    _impl_.ip_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:core.EndPoint.ip)
}

// uint32 port = 2;
inline void EndPoint::clear_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t EndPoint::port() const {
  // @@protoc_insertion_point(field_get:core.EndPoint.port)
  return _internal_port();
}
inline void EndPoint::set_port(::uint32_t value) {
  _internal_set_port(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:core.EndPoint.port)
}
inline ::uint32_t EndPoint::_internal_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_;
}
inline void EndPoint::_internal_set_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = value;
}

// -------------------------------------------------------------------

// SubscriberRequest

// .core.EndPoint tcp_endpoint = 1;
inline bool SubscriberRequest::has_tcp_endpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tcp_endpoint_ != nullptr);
  return value;
}
inline void SubscriberRequest::clear_tcp_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tcp_endpoint_ != nullptr) _impl_.tcp_endpoint_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::core::EndPoint& SubscriberRequest::_internal_tcp_endpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::core::EndPoint* p = _impl_.tcp_endpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::core::EndPoint&>(::core::_EndPoint_default_instance_);
}
inline const ::core::EndPoint& SubscriberRequest::tcp_endpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.SubscriberRequest.tcp_endpoint)
  return _internal_tcp_endpoint();
}
inline void SubscriberRequest::unsafe_arena_set_allocated_tcp_endpoint(
    ::core::EndPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tcp_endpoint_);
  }
  _impl_.tcp_endpoint_ = reinterpret_cast<::core::EndPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:core.SubscriberRequest.tcp_endpoint)
}
inline ::core::EndPoint* PROTOBUF_NULLABLE SubscriberRequest::release_tcp_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::core::EndPoint* released = _impl_.tcp_endpoint_;
  _impl_.tcp_endpoint_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::core::EndPoint* PROTOBUF_NULLABLE SubscriberRequest::unsafe_arena_release_tcp_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.SubscriberRequest.tcp_endpoint)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::core::EndPoint* temp = _impl_.tcp_endpoint_;
  _impl_.tcp_endpoint_ = nullptr;
  return temp;
}
inline ::core::EndPoint* PROTOBUF_NONNULL SubscriberRequest::_internal_mutable_tcp_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tcp_endpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::core::EndPoint>(GetArena());
    _impl_.tcp_endpoint_ = reinterpret_cast<::core::EndPoint*>(p);
  }
  return _impl_.tcp_endpoint_;
}
inline ::core::EndPoint* PROTOBUF_NONNULL SubscriberRequest::mutable_tcp_endpoint()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::core::EndPoint* _msg = _internal_mutable_tcp_endpoint();
  // @@protoc_insertion_point(field_mutable:core.SubscriberRequest.tcp_endpoint)
  return _msg;
}
inline void SubscriberRequest::set_allocated_tcp_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tcp_endpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.tcp_endpoint_ = reinterpret_cast<::core::EndPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:core.SubscriberRequest.tcp_endpoint)
}

// string topic_name = 2;
inline void SubscriberRequest::clear_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topic_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SubscriberRequest::topic_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.SubscriberRequest.topic_name)
  return _internal_topic_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SubscriberRequest::set_topic_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.topic_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.SubscriberRequest.topic_name)
}
inline ::std::string* PROTOBUF_NONNULL SubscriberRequest::mutable_topic_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_topic_name();
  // @@protoc_insertion_point(field_mutable:core.SubscriberRequest.topic_name)
  return _s;
}
inline const ::std::string& SubscriberRequest::_internal_topic_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topic_name_.Get();
}
inline void SubscriberRequest::_internal_set_topic_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.topic_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SubscriberRequest::_internal_mutable_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.topic_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SubscriberRequest::release_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.SubscriberRequest.topic_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.topic_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.topic_name_.Set("", GetArena());
  }
  return released;
}
inline void SubscriberRequest::set_allocated_topic_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.topic_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.topic_name_.IsDefault()) {
    _impl_.topic_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:core.SubscriberRequest.topic_name)
}

// float rate = 3;
inline void SubscriberRequest::clear_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rate_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float SubscriberRequest::rate() const {
  // @@protoc_insertion_point(field_get:core.SubscriberRequest.rate)
  return _internal_rate();
}
inline void SubscriberRequest::set_rate(float value) {
  _internal_set_rate(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:core.SubscriberRequest.rate)
}
inline float SubscriberRequest::_internal_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rate_;
}
inline void SubscriberRequest::_internal_set_rate(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rate_ = value;
}

// -------------------------------------------------------------------

// SubscriberReply

// -------------------------------------------------------------------

// PublisherRequest

// string topic_name = 1;
inline void PublisherRequest::clear_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topic_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PublisherRequest::topic_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.PublisherRequest.topic_name)
  return _internal_topic_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PublisherRequest::set_topic_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.topic_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.PublisherRequest.topic_name)
}
inline ::std::string* PROTOBUF_NONNULL PublisherRequest::mutable_topic_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_topic_name();
  // @@protoc_insertion_point(field_mutable:core.PublisherRequest.topic_name)
  return _s;
}
inline const ::std::string& PublisherRequest::_internal_topic_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topic_name_.Get();
}
inline void PublisherRequest::_internal_set_topic_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.topic_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PublisherRequest::_internal_mutable_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.topic_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PublisherRequest::release_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.PublisherRequest.topic_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.topic_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.topic_name_.Set("", GetArena());
  }
  return released;
}
inline void PublisherRequest::set_allocated_topic_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.topic_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.topic_name_.IsDefault()) {
    _impl_.topic_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:core.PublisherRequest.topic_name)
}

// -------------------------------------------------------------------

// PublisherReply

// string topic_name = 2;
inline void PublisherReply::clear_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topic_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PublisherReply::topic_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.PublisherReply.topic_name)
  return _internal_topic_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PublisherReply::set_topic_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.topic_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:core.PublisherReply.topic_name)
}
inline ::std::string* PROTOBUF_NONNULL PublisherReply::mutable_topic_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_topic_name();
  // @@protoc_insertion_point(field_mutable:core.PublisherReply.topic_name)
  return _s;
}
inline const ::std::string& PublisherReply::_internal_topic_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topic_name_.Get();
}
inline void PublisherReply::_internal_set_topic_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.topic_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PublisherReply::_internal_mutable_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.topic_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PublisherReply::release_topic_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.PublisherReply.topic_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.topic_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.topic_name_.Set("", GetArena());
  }
  return released;
}
inline void PublisherReply::set_allocated_topic_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.topic_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.topic_name_.IsDefault()) {
    _impl_.topic_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:core.PublisherReply.topic_name)
}

// .core.EndPoint tcp_endpoint = 3;
inline bool PublisherReply::has_tcp_endpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tcp_endpoint_ != nullptr);
  return value;
}
inline void PublisherReply::clear_tcp_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tcp_endpoint_ != nullptr) _impl_.tcp_endpoint_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::core::EndPoint& PublisherReply::_internal_tcp_endpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::core::EndPoint* p = _impl_.tcp_endpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::core::EndPoint&>(::core::_EndPoint_default_instance_);
}
inline const ::core::EndPoint& PublisherReply::tcp_endpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:core.PublisherReply.tcp_endpoint)
  return _internal_tcp_endpoint();
}
inline void PublisherReply::unsafe_arena_set_allocated_tcp_endpoint(
    ::core::EndPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tcp_endpoint_);
  }
  _impl_.tcp_endpoint_ = reinterpret_cast<::core::EndPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:core.PublisherReply.tcp_endpoint)
}
inline ::core::EndPoint* PROTOBUF_NULLABLE PublisherReply::release_tcp_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::core::EndPoint* released = _impl_.tcp_endpoint_;
  _impl_.tcp_endpoint_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::core::EndPoint* PROTOBUF_NULLABLE PublisherReply::unsafe_arena_release_tcp_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:core.PublisherReply.tcp_endpoint)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::core::EndPoint* temp = _impl_.tcp_endpoint_;
  _impl_.tcp_endpoint_ = nullptr;
  return temp;
}
inline ::core::EndPoint* PROTOBUF_NONNULL PublisherReply::_internal_mutable_tcp_endpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tcp_endpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::core::EndPoint>(GetArena());
    _impl_.tcp_endpoint_ = reinterpret_cast<::core::EndPoint*>(p);
  }
  return _impl_.tcp_endpoint_;
}
inline ::core::EndPoint* PROTOBUF_NONNULL PublisherReply::mutable_tcp_endpoint()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::core::EndPoint* _msg = _internal_mutable_tcp_endpoint();
  // @@protoc_insertion_point(field_mutable:core.PublisherReply.tcp_endpoint)
  return _msg;
}
inline void PublisherReply::set_allocated_tcp_endpoint(::core::EndPoint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tcp_endpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.tcp_endpoint_ = reinterpret_cast<::core::EndPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:core.PublisherReply.tcp_endpoint)
}

// float rate = 4;
inline void PublisherReply::clear_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rate_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float PublisherReply::rate() const {
  // @@protoc_insertion_point(field_get:core.PublisherReply.rate)
  return _internal_rate();
}
inline void PublisherReply::set_rate(float value) {
  _internal_set_rate(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:core.PublisherReply.rate)
}
inline float PublisherReply::_internal_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rate_;
}
inline void PublisherReply::_internal_set_rate(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rate_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace core


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // connection_2eproto_2epb_2eh
