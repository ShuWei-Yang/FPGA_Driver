// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: std.proto
// Protobuf C++ Version: 6.31.0

#ifndef std_2eproto_2epb_2eh
#define std_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_std_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_std_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_std_2eproto;
}  // extern "C"
namespace std_msg {
class Header;
struct HeaderDefaultTypeInternal;
extern HeaderDefaultTypeInternal _Header_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Header_class_data_;
class time;
struct timeDefaultTypeInternal;
extern timeDefaultTypeInternal _time_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull time_class_data_;
}  // namespace std_msg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace std_msg {

// ===================================================================


// -------------------------------------------------------------------

class time final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:std_msg.time) */ {
 public:
  inline time() : time(nullptr) {}
  ~time() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(time* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(time));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR time(::google::protobuf::internal::ConstantInitialized);

  inline time(const time& from) : time(nullptr, from) {}
  inline time(time&& from) noexcept
      : time(nullptr, ::std::move(from)) {}
  inline time& operator=(const time& from) {
    CopyFrom(from);
    return *this;
  }
  inline time& operator=(time&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const time& default_instance() {
    return *reinterpret_cast<const time*>(
        &_time_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(time& a, time& b) { a.Swap(&b); }
  inline void Swap(time* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(time* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  time* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<time>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const time& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const time& from) { time::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(time* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "std_msg.time"; }

 protected:
  explicit time(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  time(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const time& from);
  time(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, time&& from) noexcept
      : time(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSecFieldNumber = 1,
    kUsecFieldNumber = 2,
  };
  // int32 sec = 1;
  void clear_sec() ;
  ::int32_t sec() const;
  void set_sec(::int32_t value);

  private:
  ::int32_t _internal_sec() const;
  void _internal_set_sec(::int32_t value);

  public:
  // int32 usec = 2;
  void clear_usec() ;
  ::int32_t usec() const;
  void set_usec(::int32_t value);

  private:
  ::int32_t _internal_usec() const;
  void _internal_set_usec(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:std_msg.time)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const time& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t sec_;
    ::int32_t usec_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_std_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull time_class_data_;
// -------------------------------------------------------------------

class Header final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:std_msg.Header) */ {
 public:
  inline Header() : Header(nullptr) {}
  ~Header() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Header* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Header));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Header(::google::protobuf::internal::ConstantInitialized);

  inline Header(const Header& from) : Header(nullptr, from) {}
  inline Header(Header&& from) noexcept
      : Header(nullptr, ::std::move(from)) {}
  inline Header& operator=(const Header& from) {
    CopyFrom(from);
    return *this;
  }
  inline Header& operator=(Header&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Header& default_instance() {
    return *reinterpret_cast<const Header*>(
        &_Header_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Header& a, Header& b) { a.Swap(&b); }
  inline void Swap(Header* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Header* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Header* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Header>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Header& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Header& from) { Header::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Header* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "std_msg.Header"; }

 protected:
  explicit Header(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Header(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Header& from);
  Header(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Header&& from) noexcept
      : Header(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFrameidFieldNumber = 3,
    kStampFieldNumber = 1,
    kSeqFieldNumber = 2,
  };
  // string frameid = 3;
  void clear_frameid() ;
  const ::std::string& frameid() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_frameid(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_frameid();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_frameid();
  void set_allocated_frameid(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_frameid() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_frameid(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_frameid();

  public:
  // .std_msg.time stamp = 1;
  bool has_stamp() const;
  void clear_stamp() ;
  const ::std_msg::time& stamp() const;
  [[nodiscard]] ::std_msg::time* PROTOBUF_NULLABLE release_stamp();
  ::std_msg::time* PROTOBUF_NONNULL mutable_stamp();
  void set_allocated_stamp(::std_msg::time* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_stamp(::std_msg::time* PROTOBUF_NULLABLE value);
  ::std_msg::time* PROTOBUF_NULLABLE unsafe_arena_release_stamp();

  private:
  const ::std_msg::time& _internal_stamp() const;
  ::std_msg::time* PROTOBUF_NONNULL _internal_mutable_stamp();

  public:
  // int32 seq = 2;
  void clear_seq() ;
  ::int32_t seq() const;
  void set_seq(::int32_t value);

  private:
  ::int32_t _internal_seq() const;
  void _internal_set_seq(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:std_msg.Header)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 30,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Header& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr frameid_;
    ::std_msg::time* PROTOBUF_NULLABLE stamp_;
    ::int32_t seq_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_std_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Header_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// time

// int32 sec = 1;
inline void time::clear_sec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sec_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t time::sec() const {
  // @@protoc_insertion_point(field_get:std_msg.time.sec)
  return _internal_sec();
}
inline void time::set_sec(::int32_t value) {
  _internal_set_sec(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:std_msg.time.sec)
}
inline ::int32_t time::_internal_sec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sec_;
}
inline void time::_internal_set_sec(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sec_ = value;
}

// int32 usec = 2;
inline void time::clear_usec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.usec_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t time::usec() const {
  // @@protoc_insertion_point(field_get:std_msg.time.usec)
  return _internal_usec();
}
inline void time::set_usec(::int32_t value) {
  _internal_set_usec(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:std_msg.time.usec)
}
inline ::int32_t time::_internal_usec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.usec_;
}
inline void time::_internal_set_usec(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.usec_ = value;
}

// -------------------------------------------------------------------

// Header

// .std_msg.time stamp = 1;
inline bool Header::has_stamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.stamp_ != nullptr);
  return value;
}
inline void Header::clear_stamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.stamp_ != nullptr) _impl_.stamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std_msg::time& Header::_internal_stamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::std_msg::time* p = _impl_.stamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::std_msg::time&>(::std_msg::_time_default_instance_);
}
inline const ::std_msg::time& Header::stamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:std_msg.Header.stamp)
  return _internal_stamp();
}
inline void Header::unsafe_arena_set_allocated_stamp(
    ::std_msg::time* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.stamp_);
  }
  _impl_.stamp_ = reinterpret_cast<::std_msg::time*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:std_msg.Header.stamp)
}
inline ::std_msg::time* PROTOBUF_NULLABLE Header::release_stamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::std_msg::time* released = _impl_.stamp_;
  _impl_.stamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::std_msg::time* PROTOBUF_NULLABLE Header::unsafe_arena_release_stamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:std_msg.Header.stamp)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::std_msg::time* temp = _impl_.stamp_;
  _impl_.stamp_ = nullptr;
  return temp;
}
inline ::std_msg::time* PROTOBUF_NONNULL Header::_internal_mutable_stamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.stamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::std_msg::time>(GetArena());
    _impl_.stamp_ = reinterpret_cast<::std_msg::time*>(p);
  }
  return _impl_.stamp_;
}
inline ::std_msg::time* PROTOBUF_NONNULL Header::mutable_stamp()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::std_msg::time* _msg = _internal_mutable_stamp();
  // @@protoc_insertion_point(field_mutable:std_msg.Header.stamp)
  return _msg;
}
inline void Header::set_allocated_stamp(::std_msg::time* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.stamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.stamp_ = reinterpret_cast<::std_msg::time*>(value);
  // @@protoc_insertion_point(field_set_allocated:std_msg.Header.stamp)
}

// int32 seq = 2;
inline void Header::clear_seq() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t Header::seq() const {
  // @@protoc_insertion_point(field_get:std_msg.Header.seq)
  return _internal_seq();
}
inline void Header::set_seq(::int32_t value) {
  _internal_set_seq(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:std_msg.Header.seq)
}
inline ::int32_t Header::_internal_seq() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_;
}
inline void Header::_internal_set_seq(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_ = value;
}

// string frameid = 3;
inline void Header::clear_frameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frameid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Header::frameid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:std_msg.Header.frameid)
  return _internal_frameid();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Header::set_frameid(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.frameid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:std_msg.Header.frameid)
}
inline ::std::string* PROTOBUF_NONNULL Header::mutable_frameid()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_frameid();
  // @@protoc_insertion_point(field_mutable:std_msg.Header.frameid)
  return _s;
}
inline const ::std::string& Header::_internal_frameid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frameid_.Get();
}
inline void Header::_internal_set_frameid(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.frameid_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Header::_internal_mutable_frameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.frameid_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Header::release_frameid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:std_msg.Header.frameid)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.frameid_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.frameid_.Set("", GetArena());
  }
  return released;
}
inline void Header::set_allocated_frameid(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.frameid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.frameid_.IsDefault()) {
    _impl_.frameid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:std_msg.Header.frameid)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace std_msg


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // std_2eproto_2epb_2eh
