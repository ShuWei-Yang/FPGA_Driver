// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Motor.proto
// Protobuf C++ Version: 6.31.0

#ifndef Motor_2eproto_2epb_2eh
#define Motor_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "std.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Motor_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Motor_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_Motor_2eproto;
}  // extern "C"
namespace motor_msg {
class LegCmd;
struct LegCmdDefaultTypeInternal;
extern LegCmdDefaultTypeInternal _LegCmd_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LegCmd_class_data_;
class LegState;
struct LegStateDefaultTypeInternal;
extern LegStateDefaultTypeInternal _LegState_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LegState_class_data_;
class MotorCmd;
struct MotorCmdDefaultTypeInternal;
extern MotorCmdDefaultTypeInternal _MotorCmd_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MotorCmd_class_data_;
class MotorCmdStamped;
struct MotorCmdStampedDefaultTypeInternal;
extern MotorCmdStampedDefaultTypeInternal _MotorCmdStamped_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MotorCmdStamped_class_data_;
class MotorState;
struct MotorStateDefaultTypeInternal;
extern MotorStateDefaultTypeInternal _MotorState_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MotorState_class_data_;
class MotorStateStamped;
struct MotorStateStampedDefaultTypeInternal;
extern MotorStateStampedDefaultTypeInternal _MotorStateStamped_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MotorStateStamped_class_data_;
}  // namespace motor_msg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace motor_msg {

// ===================================================================


// -------------------------------------------------------------------

class MotorState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:motor_msg.MotorState) */ {
 public:
  inline MotorState() : MotorState(nullptr) {}
  ~MotorState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MotorState* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MotorState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MotorState(::google::protobuf::internal::ConstantInitialized);

  inline MotorState(const MotorState& from) : MotorState(nullptr, from) {}
  inline MotorState(MotorState&& from) noexcept
      : MotorState(nullptr, ::std::move(from)) {}
  inline MotorState& operator=(const MotorState& from) {
    CopyFrom(from);
    return *this;
  }
  inline MotorState& operator=(MotorState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MotorState& default_instance() {
    return *reinterpret_cast<const MotorState*>(
        &_MotorState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MotorState& a, MotorState& b) { a.Swap(&b); }
  inline void Swap(MotorState* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MotorState* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MotorState* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MotorState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MotorState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MotorState& from) { MotorState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MotorState* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "motor_msg.MotorState"; }

 protected:
  explicit MotorState(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MotorState(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MotorState& from);
  MotorState(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MotorState&& from) noexcept
      : MotorState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionFieldNumber = 1,
    kVelocityFieldNumber = 2,
    kTorqueFieldNumber = 3,
  };
  // double position = 1;
  void clear_position() ;
  double position() const;
  void set_position(double value);

  private:
  double _internal_position() const;
  void _internal_set_position(double value);

  public:
  // double velocity = 2;
  void clear_velocity() ;
  double velocity() const;
  void set_velocity(double value);

  private:
  double _internal_velocity() const;
  void _internal_set_velocity(double value);

  public:
  // double torque = 3;
  void clear_torque() ;
  double torque() const;
  void set_torque(double value);

  private:
  double _internal_torque() const;
  void _internal_set_torque(double value);

  public:
  // @@protoc_insertion_point(class_scope:motor_msg.MotorState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MotorState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    double position_;
    double velocity_;
    double torque_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Motor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MotorState_class_data_;
// -------------------------------------------------------------------

class MotorCmd final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:motor_msg.MotorCmd) */ {
 public:
  inline MotorCmd() : MotorCmd(nullptr) {}
  ~MotorCmd() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MotorCmd* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MotorCmd));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MotorCmd(::google::protobuf::internal::ConstantInitialized);

  inline MotorCmd(const MotorCmd& from) : MotorCmd(nullptr, from) {}
  inline MotorCmd(MotorCmd&& from) noexcept
      : MotorCmd(nullptr, ::std::move(from)) {}
  inline MotorCmd& operator=(const MotorCmd& from) {
    CopyFrom(from);
    return *this;
  }
  inline MotorCmd& operator=(MotorCmd&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MotorCmd& default_instance() {
    return *reinterpret_cast<const MotorCmd*>(
        &_MotorCmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MotorCmd& a, MotorCmd& b) { a.Swap(&b); }
  inline void Swap(MotorCmd* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MotorCmd* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MotorCmd* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MotorCmd>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MotorCmd& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MotorCmd& from) { MotorCmd::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MotorCmd* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "motor_msg.MotorCmd"; }

 protected:
  explicit MotorCmd(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MotorCmd(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MotorCmd& from);
  MotorCmd(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MotorCmd&& from) noexcept
      : MotorCmd(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionFieldNumber = 1,
    kKpFieldNumber = 2,
    kKiFieldNumber = 3,
    kKdFieldNumber = 4,
    kTorqueFieldNumber = 5,
  };
  // double position = 1;
  void clear_position() ;
  double position() const;
  void set_position(double value);

  private:
  double _internal_position() const;
  void _internal_set_position(double value);

  public:
  // double kp = 2;
  void clear_kp() ;
  double kp() const;
  void set_kp(double value);

  private:
  double _internal_kp() const;
  void _internal_set_kp(double value);

  public:
  // double ki = 3;
  void clear_ki() ;
  double ki() const;
  void set_ki(double value);

  private:
  double _internal_ki() const;
  void _internal_set_ki(double value);

  public:
  // double kd = 4;
  void clear_kd() ;
  double kd() const;
  void set_kd(double value);

  private:
  double _internal_kd() const;
  void _internal_set_kd(double value);

  public:
  // double torque = 5;
  void clear_torque() ;
  double torque() const;
  void set_torque(double value);

  private:
  double _internal_torque() const;
  void _internal_set_torque(double value);

  public:
  // @@protoc_insertion_point(class_scope:motor_msg.MotorCmd)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MotorCmd& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    double position_;
    double kp_;
    double ki_;
    double kd_;
    double torque_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Motor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MotorCmd_class_data_;
// -------------------------------------------------------------------

class LegState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:motor_msg.LegState) */ {
 public:
  inline LegState() : LegState(nullptr) {}
  ~LegState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LegState* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LegState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LegState(::google::protobuf::internal::ConstantInitialized);

  inline LegState(const LegState& from) : LegState(nullptr, from) {}
  inline LegState(LegState&& from) noexcept
      : LegState(nullptr, ::std::move(from)) {}
  inline LegState& operator=(const LegState& from) {
    CopyFrom(from);
    return *this;
  }
  inline LegState& operator=(LegState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LegState& default_instance() {
    return *reinterpret_cast<const LegState*>(
        &_LegState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(LegState& a, LegState& b) { a.Swap(&b); }
  inline void Swap(LegState* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LegState* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LegState* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LegState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LegState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LegState& from) { LegState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LegState* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "motor_msg.LegState"; }

 protected:
  explicit LegState(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LegState(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LegState& from);
  LegState(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LegState&& from) noexcept
      : LegState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHipFieldNumber = 1,
    kSteeringFieldNumber = 2,
    kHubFieldNumber = 3,
  };
  // .motor_msg.MotorState hip = 1;
  bool has_hip() const;
  void clear_hip() ;
  const ::motor_msg::MotorState& hip() const;
  [[nodiscard]] ::motor_msg::MotorState* PROTOBUF_NULLABLE release_hip();
  ::motor_msg::MotorState* PROTOBUF_NONNULL mutable_hip();
  void set_allocated_hip(::motor_msg::MotorState* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_hip(::motor_msg::MotorState* PROTOBUF_NULLABLE value);
  ::motor_msg::MotorState* PROTOBUF_NULLABLE unsafe_arena_release_hip();

  private:
  const ::motor_msg::MotorState& _internal_hip() const;
  ::motor_msg::MotorState* PROTOBUF_NONNULL _internal_mutable_hip();

  public:
  // .motor_msg.MotorState steering = 2;
  bool has_steering() const;
  void clear_steering() ;
  const ::motor_msg::MotorState& steering() const;
  [[nodiscard]] ::motor_msg::MotorState* PROTOBUF_NULLABLE release_steering();
  ::motor_msg::MotorState* PROTOBUF_NONNULL mutable_steering();
  void set_allocated_steering(::motor_msg::MotorState* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_steering(::motor_msg::MotorState* PROTOBUF_NULLABLE value);
  ::motor_msg::MotorState* PROTOBUF_NULLABLE unsafe_arena_release_steering();

  private:
  const ::motor_msg::MotorState& _internal_steering() const;
  ::motor_msg::MotorState* PROTOBUF_NONNULL _internal_mutable_steering();

  public:
  // .motor_msg.MotorState hub = 3;
  bool has_hub() const;
  void clear_hub() ;
  const ::motor_msg::MotorState& hub() const;
  [[nodiscard]] ::motor_msg::MotorState* PROTOBUF_NULLABLE release_hub();
  ::motor_msg::MotorState* PROTOBUF_NONNULL mutable_hub();
  void set_allocated_hub(::motor_msg::MotorState* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_hub(::motor_msg::MotorState* PROTOBUF_NULLABLE value);
  ::motor_msg::MotorState* PROTOBUF_NULLABLE unsafe_arena_release_hub();

  private:
  const ::motor_msg::MotorState& _internal_hub() const;
  ::motor_msg::MotorState* PROTOBUF_NONNULL _internal_mutable_hub();

  public:
  // @@protoc_insertion_point(class_scope:motor_msg.LegState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LegState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::motor_msg::MotorState* PROTOBUF_NULLABLE hip_;
    ::motor_msg::MotorState* PROTOBUF_NULLABLE steering_;
    ::motor_msg::MotorState* PROTOBUF_NULLABLE hub_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Motor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LegState_class_data_;
// -------------------------------------------------------------------

class LegCmd final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:motor_msg.LegCmd) */ {
 public:
  inline LegCmd() : LegCmd(nullptr) {}
  ~LegCmd() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LegCmd* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LegCmd));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LegCmd(::google::protobuf::internal::ConstantInitialized);

  inline LegCmd(const LegCmd& from) : LegCmd(nullptr, from) {}
  inline LegCmd(LegCmd&& from) noexcept
      : LegCmd(nullptr, ::std::move(from)) {}
  inline LegCmd& operator=(const LegCmd& from) {
    CopyFrom(from);
    return *this;
  }
  inline LegCmd& operator=(LegCmd&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LegCmd& default_instance() {
    return *reinterpret_cast<const LegCmd*>(
        &_LegCmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(LegCmd& a, LegCmd& b) { a.Swap(&b); }
  inline void Swap(LegCmd* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LegCmd* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LegCmd* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LegCmd>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LegCmd& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LegCmd& from) { LegCmd::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LegCmd* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "motor_msg.LegCmd"; }

 protected:
  explicit LegCmd(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LegCmd(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LegCmd& from);
  LegCmd(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LegCmd&& from) noexcept
      : LegCmd(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHipFieldNumber = 1,
    kSteeringFieldNumber = 2,
    kHubFieldNumber = 3,
  };
  // .motor_msg.MotorCmd hip = 1;
  bool has_hip() const;
  void clear_hip() ;
  const ::motor_msg::MotorCmd& hip() const;
  [[nodiscard]] ::motor_msg::MotorCmd* PROTOBUF_NULLABLE release_hip();
  ::motor_msg::MotorCmd* PROTOBUF_NONNULL mutable_hip();
  void set_allocated_hip(::motor_msg::MotorCmd* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_hip(::motor_msg::MotorCmd* PROTOBUF_NULLABLE value);
  ::motor_msg::MotorCmd* PROTOBUF_NULLABLE unsafe_arena_release_hip();

  private:
  const ::motor_msg::MotorCmd& _internal_hip() const;
  ::motor_msg::MotorCmd* PROTOBUF_NONNULL _internal_mutable_hip();

  public:
  // .motor_msg.MotorCmd steering = 2;
  bool has_steering() const;
  void clear_steering() ;
  const ::motor_msg::MotorCmd& steering() const;
  [[nodiscard]] ::motor_msg::MotorCmd* PROTOBUF_NULLABLE release_steering();
  ::motor_msg::MotorCmd* PROTOBUF_NONNULL mutable_steering();
  void set_allocated_steering(::motor_msg::MotorCmd* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_steering(::motor_msg::MotorCmd* PROTOBUF_NULLABLE value);
  ::motor_msg::MotorCmd* PROTOBUF_NULLABLE unsafe_arena_release_steering();

  private:
  const ::motor_msg::MotorCmd& _internal_steering() const;
  ::motor_msg::MotorCmd* PROTOBUF_NONNULL _internal_mutable_steering();

  public:
  // .motor_msg.MotorCmd hub = 3;
  bool has_hub() const;
  void clear_hub() ;
  const ::motor_msg::MotorCmd& hub() const;
  [[nodiscard]] ::motor_msg::MotorCmd* PROTOBUF_NULLABLE release_hub();
  ::motor_msg::MotorCmd* PROTOBUF_NONNULL mutable_hub();
  void set_allocated_hub(::motor_msg::MotorCmd* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_hub(::motor_msg::MotorCmd* PROTOBUF_NULLABLE value);
  ::motor_msg::MotorCmd* PROTOBUF_NULLABLE unsafe_arena_release_hub();

  private:
  const ::motor_msg::MotorCmd& _internal_hub() const;
  ::motor_msg::MotorCmd* PROTOBUF_NONNULL _internal_mutable_hub();

  public:
  // @@protoc_insertion_point(class_scope:motor_msg.LegCmd)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LegCmd& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::motor_msg::MotorCmd* PROTOBUF_NULLABLE hip_;
    ::motor_msg::MotorCmd* PROTOBUF_NULLABLE steering_;
    ::motor_msg::MotorCmd* PROTOBUF_NULLABLE hub_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Motor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LegCmd_class_data_;
// -------------------------------------------------------------------

class MotorStateStamped final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:motor_msg.MotorStateStamped) */ {
 public:
  inline MotorStateStamped() : MotorStateStamped(nullptr) {}
  ~MotorStateStamped() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MotorStateStamped* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MotorStateStamped));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MotorStateStamped(::google::protobuf::internal::ConstantInitialized);

  inline MotorStateStamped(const MotorStateStamped& from) : MotorStateStamped(nullptr, from) {}
  inline MotorStateStamped(MotorStateStamped&& from) noexcept
      : MotorStateStamped(nullptr, ::std::move(from)) {}
  inline MotorStateStamped& operator=(const MotorStateStamped& from) {
    CopyFrom(from);
    return *this;
  }
  inline MotorStateStamped& operator=(MotorStateStamped&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MotorStateStamped& default_instance() {
    return *reinterpret_cast<const MotorStateStamped*>(
        &_MotorStateStamped_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(MotorStateStamped& a, MotorStateStamped& b) { a.Swap(&b); }
  inline void Swap(MotorStateStamped* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MotorStateStamped* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MotorStateStamped* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MotorStateStamped>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MotorStateStamped& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MotorStateStamped& from) { MotorStateStamped::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MotorStateStamped* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "motor_msg.MotorStateStamped"; }

 protected:
  explicit MotorStateStamped(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MotorStateStamped(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MotorStateStamped& from);
  MotorStateStamped(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MotorStateStamped&& from) noexcept
      : MotorStateStamped(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeaderFieldNumber = 1,
    kModuleAFieldNumber = 2,
    kModuleBFieldNumber = 3,
    kModuleCFieldNumber = 4,
    kModuleDFieldNumber = 5,
  };
  // .std_msg.Header header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::std_msg::Header& header() const;
  [[nodiscard]] ::std_msg::Header* PROTOBUF_NULLABLE release_header();
  ::std_msg::Header* PROTOBUF_NONNULL mutable_header();
  void set_allocated_header(::std_msg::Header* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header(::std_msg::Header* PROTOBUF_NULLABLE value);
  ::std_msg::Header* PROTOBUF_NULLABLE unsafe_arena_release_header();

  private:
  const ::std_msg::Header& _internal_header() const;
  ::std_msg::Header* PROTOBUF_NONNULL _internal_mutable_header();

  public:
  // .motor_msg.LegState module_a = 2;
  bool has_module_a() const;
  void clear_module_a() ;
  const ::motor_msg::LegState& module_a() const;
  [[nodiscard]] ::motor_msg::LegState* PROTOBUF_NULLABLE release_module_a();
  ::motor_msg::LegState* PROTOBUF_NONNULL mutable_module_a();
  void set_allocated_module_a(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_module_a(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  ::motor_msg::LegState* PROTOBUF_NULLABLE unsafe_arena_release_module_a();

  private:
  const ::motor_msg::LegState& _internal_module_a() const;
  ::motor_msg::LegState* PROTOBUF_NONNULL _internal_mutable_module_a();

  public:
  // .motor_msg.LegState module_b = 3;
  bool has_module_b() const;
  void clear_module_b() ;
  const ::motor_msg::LegState& module_b() const;
  [[nodiscard]] ::motor_msg::LegState* PROTOBUF_NULLABLE release_module_b();
  ::motor_msg::LegState* PROTOBUF_NONNULL mutable_module_b();
  void set_allocated_module_b(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_module_b(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  ::motor_msg::LegState* PROTOBUF_NULLABLE unsafe_arena_release_module_b();

  private:
  const ::motor_msg::LegState& _internal_module_b() const;
  ::motor_msg::LegState* PROTOBUF_NONNULL _internal_mutable_module_b();

  public:
  // .motor_msg.LegState module_c = 4;
  bool has_module_c() const;
  void clear_module_c() ;
  const ::motor_msg::LegState& module_c() const;
  [[nodiscard]] ::motor_msg::LegState* PROTOBUF_NULLABLE release_module_c();
  ::motor_msg::LegState* PROTOBUF_NONNULL mutable_module_c();
  void set_allocated_module_c(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_module_c(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  ::motor_msg::LegState* PROTOBUF_NULLABLE unsafe_arena_release_module_c();

  private:
  const ::motor_msg::LegState& _internal_module_c() const;
  ::motor_msg::LegState* PROTOBUF_NONNULL _internal_mutable_module_c();

  public:
  // .motor_msg.LegState module_d = 5;
  bool has_module_d() const;
  void clear_module_d() ;
  const ::motor_msg::LegState& module_d() const;
  [[nodiscard]] ::motor_msg::LegState* PROTOBUF_NULLABLE release_module_d();
  ::motor_msg::LegState* PROTOBUF_NONNULL mutable_module_d();
  void set_allocated_module_d(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_module_d(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  ::motor_msg::LegState* PROTOBUF_NULLABLE unsafe_arena_release_module_d();

  private:
  const ::motor_msg::LegState& _internal_module_d() const;
  ::motor_msg::LegState* PROTOBUF_NONNULL _internal_mutable_module_d();

  public:
  // @@protoc_insertion_point(class_scope:motor_msg.MotorStateStamped)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   5, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MotorStateStamped& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::std_msg::Header* PROTOBUF_NULLABLE header_;
    ::motor_msg::LegState* PROTOBUF_NULLABLE module_a_;
    ::motor_msg::LegState* PROTOBUF_NULLABLE module_b_;
    ::motor_msg::LegState* PROTOBUF_NULLABLE module_c_;
    ::motor_msg::LegState* PROTOBUF_NULLABLE module_d_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Motor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MotorStateStamped_class_data_;
// -------------------------------------------------------------------

class MotorCmdStamped final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:motor_msg.MotorCmdStamped) */ {
 public:
  inline MotorCmdStamped() : MotorCmdStamped(nullptr) {}
  ~MotorCmdStamped() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MotorCmdStamped* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MotorCmdStamped));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MotorCmdStamped(::google::protobuf::internal::ConstantInitialized);

  inline MotorCmdStamped(const MotorCmdStamped& from) : MotorCmdStamped(nullptr, from) {}
  inline MotorCmdStamped(MotorCmdStamped&& from) noexcept
      : MotorCmdStamped(nullptr, ::std::move(from)) {}
  inline MotorCmdStamped& operator=(const MotorCmdStamped& from) {
    CopyFrom(from);
    return *this;
  }
  inline MotorCmdStamped& operator=(MotorCmdStamped&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MotorCmdStamped& default_instance() {
    return *reinterpret_cast<const MotorCmdStamped*>(
        &_MotorCmdStamped_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MotorCmdStamped& a, MotorCmdStamped& b) { a.Swap(&b); }
  inline void Swap(MotorCmdStamped* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MotorCmdStamped* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MotorCmdStamped* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MotorCmdStamped>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MotorCmdStamped& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MotorCmdStamped& from) { MotorCmdStamped::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MotorCmdStamped* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "motor_msg.MotorCmdStamped"; }

 protected:
  explicit MotorCmdStamped(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MotorCmdStamped(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MotorCmdStamped& from);
  MotorCmdStamped(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MotorCmdStamped&& from) noexcept
      : MotorCmdStamped(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeaderFieldNumber = 1,
    kModuleAFieldNumber = 2,
    kModuleBFieldNumber = 3,
    kModuleCFieldNumber = 4,
    kModuleDFieldNumber = 5,
  };
  // .std_msg.Header header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::std_msg::Header& header() const;
  [[nodiscard]] ::std_msg::Header* PROTOBUF_NULLABLE release_header();
  ::std_msg::Header* PROTOBUF_NONNULL mutable_header();
  void set_allocated_header(::std_msg::Header* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header(::std_msg::Header* PROTOBUF_NULLABLE value);
  ::std_msg::Header* PROTOBUF_NULLABLE unsafe_arena_release_header();

  private:
  const ::std_msg::Header& _internal_header() const;
  ::std_msg::Header* PROTOBUF_NONNULL _internal_mutable_header();

  public:
  // .motor_msg.LegCmd module_a = 2;
  bool has_module_a() const;
  void clear_module_a() ;
  const ::motor_msg::LegCmd& module_a() const;
  [[nodiscard]] ::motor_msg::LegCmd* PROTOBUF_NULLABLE release_module_a();
  ::motor_msg::LegCmd* PROTOBUF_NONNULL mutable_module_a();
  void set_allocated_module_a(::motor_msg::LegCmd* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_module_a(::motor_msg::LegCmd* PROTOBUF_NULLABLE value);
  ::motor_msg::LegCmd* PROTOBUF_NULLABLE unsafe_arena_release_module_a();

  private:
  const ::motor_msg::LegCmd& _internal_module_a() const;
  ::motor_msg::LegCmd* PROTOBUF_NONNULL _internal_mutable_module_a();

  public:
  // .motor_msg.LegCmd module_b = 3;
  bool has_module_b() const;
  void clear_module_b() ;
  const ::motor_msg::LegCmd& module_b() const;
  [[nodiscard]] ::motor_msg::LegCmd* PROTOBUF_NULLABLE release_module_b();
  ::motor_msg::LegCmd* PROTOBUF_NONNULL mutable_module_b();
  void set_allocated_module_b(::motor_msg::LegCmd* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_module_b(::motor_msg::LegCmd* PROTOBUF_NULLABLE value);
  ::motor_msg::LegCmd* PROTOBUF_NULLABLE unsafe_arena_release_module_b();

  private:
  const ::motor_msg::LegCmd& _internal_module_b() const;
  ::motor_msg::LegCmd* PROTOBUF_NONNULL _internal_mutable_module_b();

  public:
  // .motor_msg.LegCmd module_c = 4;
  bool has_module_c() const;
  void clear_module_c() ;
  const ::motor_msg::LegCmd& module_c() const;
  [[nodiscard]] ::motor_msg::LegCmd* PROTOBUF_NULLABLE release_module_c();
  ::motor_msg::LegCmd* PROTOBUF_NONNULL mutable_module_c();
  void set_allocated_module_c(::motor_msg::LegCmd* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_module_c(::motor_msg::LegCmd* PROTOBUF_NULLABLE value);
  ::motor_msg::LegCmd* PROTOBUF_NULLABLE unsafe_arena_release_module_c();

  private:
  const ::motor_msg::LegCmd& _internal_module_c() const;
  ::motor_msg::LegCmd* PROTOBUF_NONNULL _internal_mutable_module_c();

  public:
  // .motor_msg.LegCmd module_d = 5;
  bool has_module_d() const;
  void clear_module_d() ;
  const ::motor_msg::LegCmd& module_d() const;
  [[nodiscard]] ::motor_msg::LegCmd* PROTOBUF_NULLABLE release_module_d();
  ::motor_msg::LegCmd* PROTOBUF_NONNULL mutable_module_d();
  void set_allocated_module_d(::motor_msg::LegCmd* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_module_d(::motor_msg::LegCmd* PROTOBUF_NULLABLE value);
  ::motor_msg::LegCmd* PROTOBUF_NULLABLE unsafe_arena_release_module_d();

  private:
  const ::motor_msg::LegCmd& _internal_module_d() const;
  ::motor_msg::LegCmd* PROTOBUF_NONNULL _internal_mutable_module_d();

  public:
  // @@protoc_insertion_point(class_scope:motor_msg.MotorCmdStamped)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   5, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MotorCmdStamped& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::std_msg::Header* PROTOBUF_NULLABLE header_;
    ::motor_msg::LegCmd* PROTOBUF_NULLABLE module_a_;
    ::motor_msg::LegCmd* PROTOBUF_NULLABLE module_b_;
    ::motor_msg::LegCmd* PROTOBUF_NULLABLE module_c_;
    ::motor_msg::LegCmd* PROTOBUF_NULLABLE module_d_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Motor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MotorCmdStamped_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MotorCmd

// double position = 1;
inline void MotorCmd::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double MotorCmd::position() const {
  // @@protoc_insertion_point(field_get:motor_msg.MotorCmd.position)
  return _internal_position();
}
inline void MotorCmd::set_position(double value) {
  _internal_set_position(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:motor_msg.MotorCmd.position)
}
inline double MotorCmd::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.position_;
}
inline void MotorCmd::_internal_set_position(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_ = value;
}

// double kp = 2;
inline void MotorCmd::clear_kp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kp_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double MotorCmd::kp() const {
  // @@protoc_insertion_point(field_get:motor_msg.MotorCmd.kp)
  return _internal_kp();
}
inline void MotorCmd::set_kp(double value) {
  _internal_set_kp(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:motor_msg.MotorCmd.kp)
}
inline double MotorCmd::_internal_kp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kp_;
}
inline void MotorCmd::_internal_set_kp(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kp_ = value;
}

// double ki = 3;
inline void MotorCmd::clear_ki() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ki_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double MotorCmd::ki() const {
  // @@protoc_insertion_point(field_get:motor_msg.MotorCmd.ki)
  return _internal_ki();
}
inline void MotorCmd::set_ki(double value) {
  _internal_set_ki(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:motor_msg.MotorCmd.ki)
}
inline double MotorCmd::_internal_ki() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ki_;
}
inline void MotorCmd::_internal_set_ki(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ki_ = value;
}

// double kd = 4;
inline void MotorCmd::clear_kd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kd_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double MotorCmd::kd() const {
  // @@protoc_insertion_point(field_get:motor_msg.MotorCmd.kd)
  return _internal_kd();
}
inline void MotorCmd::set_kd(double value) {
  _internal_set_kd(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:motor_msg.MotorCmd.kd)
}
inline double MotorCmd::_internal_kd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kd_;
}
inline void MotorCmd::_internal_set_kd(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kd_ = value;
}

// double torque = 5;
inline void MotorCmd::clear_torque() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.torque_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double MotorCmd::torque() const {
  // @@protoc_insertion_point(field_get:motor_msg.MotorCmd.torque)
  return _internal_torque();
}
inline void MotorCmd::set_torque(double value) {
  _internal_set_torque(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:motor_msg.MotorCmd.torque)
}
inline double MotorCmd::_internal_torque() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.torque_;
}
inline void MotorCmd::_internal_set_torque(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.torque_ = value;
}

// -------------------------------------------------------------------

// MotorState

// double position = 1;
inline void MotorState::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double MotorState::position() const {
  // @@protoc_insertion_point(field_get:motor_msg.MotorState.position)
  return _internal_position();
}
inline void MotorState::set_position(double value) {
  _internal_set_position(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:motor_msg.MotorState.position)
}
inline double MotorState::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.position_;
}
inline void MotorState::_internal_set_position(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_ = value;
}

// double velocity = 2;
inline void MotorState::clear_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.velocity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double MotorState::velocity() const {
  // @@protoc_insertion_point(field_get:motor_msg.MotorState.velocity)
  return _internal_velocity();
}
inline void MotorState::set_velocity(double value) {
  _internal_set_velocity(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:motor_msg.MotorState.velocity)
}
inline double MotorState::_internal_velocity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.velocity_;
}
inline void MotorState::_internal_set_velocity(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.velocity_ = value;
}

// double torque = 3;
inline void MotorState::clear_torque() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.torque_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double MotorState::torque() const {
  // @@protoc_insertion_point(field_get:motor_msg.MotorState.torque)
  return _internal_torque();
}
inline void MotorState::set_torque(double value) {
  _internal_set_torque(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:motor_msg.MotorState.torque)
}
inline double MotorState::_internal_torque() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.torque_;
}
inline void MotorState::_internal_set_torque(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.torque_ = value;
}

// -------------------------------------------------------------------

// LegCmd

// .motor_msg.MotorCmd hip = 1;
inline bool LegCmd::has_hip() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hip_ != nullptr);
  return value;
}
inline void LegCmd::clear_hip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hip_ != nullptr) _impl_.hip_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::motor_msg::MotorCmd& LegCmd::_internal_hip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::MotorCmd* p = _impl_.hip_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::MotorCmd&>(::motor_msg::_MotorCmd_default_instance_);
}
inline const ::motor_msg::MotorCmd& LegCmd::hip() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.LegCmd.hip)
  return _internal_hip();
}
inline void LegCmd::unsafe_arena_set_allocated_hip(
    ::motor_msg::MotorCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hip_);
  }
  _impl_.hip_ = reinterpret_cast<::motor_msg::MotorCmd*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.LegCmd.hip)
}
inline ::motor_msg::MotorCmd* PROTOBUF_NULLABLE LegCmd::release_hip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::motor_msg::MotorCmd* released = _impl_.hip_;
  _impl_.hip_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::MotorCmd* PROTOBUF_NULLABLE LegCmd::unsafe_arena_release_hip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.LegCmd.hip)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::motor_msg::MotorCmd* temp = _impl_.hip_;
  _impl_.hip_ = nullptr;
  return temp;
}
inline ::motor_msg::MotorCmd* PROTOBUF_NONNULL LegCmd::_internal_mutable_hip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hip_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::MotorCmd>(GetArena());
    _impl_.hip_ = reinterpret_cast<::motor_msg::MotorCmd*>(p);
  }
  return _impl_.hip_;
}
inline ::motor_msg::MotorCmd* PROTOBUF_NONNULL LegCmd::mutable_hip()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::motor_msg::MotorCmd* _msg = _internal_mutable_hip();
  // @@protoc_insertion_point(field_mutable:motor_msg.LegCmd.hip)
  return _msg;
}
inline void LegCmd::set_allocated_hip(::motor_msg::MotorCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hip_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.hip_ = reinterpret_cast<::motor_msg::MotorCmd*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.LegCmd.hip)
}

// .motor_msg.MotorCmd steering = 2;
inline bool LegCmd::has_steering() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.steering_ != nullptr);
  return value;
}
inline void LegCmd::clear_steering() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.steering_ != nullptr) _impl_.steering_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::motor_msg::MotorCmd& LegCmd::_internal_steering() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::MotorCmd* p = _impl_.steering_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::MotorCmd&>(::motor_msg::_MotorCmd_default_instance_);
}
inline const ::motor_msg::MotorCmd& LegCmd::steering() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.LegCmd.steering)
  return _internal_steering();
}
inline void LegCmd::unsafe_arena_set_allocated_steering(
    ::motor_msg::MotorCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.steering_);
  }
  _impl_.steering_ = reinterpret_cast<::motor_msg::MotorCmd*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.LegCmd.steering)
}
inline ::motor_msg::MotorCmd* PROTOBUF_NULLABLE LegCmd::release_steering() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::motor_msg::MotorCmd* released = _impl_.steering_;
  _impl_.steering_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::MotorCmd* PROTOBUF_NULLABLE LegCmd::unsafe_arena_release_steering() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.LegCmd.steering)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::motor_msg::MotorCmd* temp = _impl_.steering_;
  _impl_.steering_ = nullptr;
  return temp;
}
inline ::motor_msg::MotorCmd* PROTOBUF_NONNULL LegCmd::_internal_mutable_steering() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.steering_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::MotorCmd>(GetArena());
    _impl_.steering_ = reinterpret_cast<::motor_msg::MotorCmd*>(p);
  }
  return _impl_.steering_;
}
inline ::motor_msg::MotorCmd* PROTOBUF_NONNULL LegCmd::mutable_steering()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::motor_msg::MotorCmd* _msg = _internal_mutable_steering();
  // @@protoc_insertion_point(field_mutable:motor_msg.LegCmd.steering)
  return _msg;
}
inline void LegCmd::set_allocated_steering(::motor_msg::MotorCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.steering_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.steering_ = reinterpret_cast<::motor_msg::MotorCmd*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.LegCmd.steering)
}

// .motor_msg.MotorCmd hub = 3;
inline bool LegCmd::has_hub() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hub_ != nullptr);
  return value;
}
inline void LegCmd::clear_hub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hub_ != nullptr) _impl_.hub_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::motor_msg::MotorCmd& LegCmd::_internal_hub() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::MotorCmd* p = _impl_.hub_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::MotorCmd&>(::motor_msg::_MotorCmd_default_instance_);
}
inline const ::motor_msg::MotorCmd& LegCmd::hub() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.LegCmd.hub)
  return _internal_hub();
}
inline void LegCmd::unsafe_arena_set_allocated_hub(
    ::motor_msg::MotorCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hub_);
  }
  _impl_.hub_ = reinterpret_cast<::motor_msg::MotorCmd*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.LegCmd.hub)
}
inline ::motor_msg::MotorCmd* PROTOBUF_NULLABLE LegCmd::release_hub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::motor_msg::MotorCmd* released = _impl_.hub_;
  _impl_.hub_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::MotorCmd* PROTOBUF_NULLABLE LegCmd::unsafe_arena_release_hub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.LegCmd.hub)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::motor_msg::MotorCmd* temp = _impl_.hub_;
  _impl_.hub_ = nullptr;
  return temp;
}
inline ::motor_msg::MotorCmd* PROTOBUF_NONNULL LegCmd::_internal_mutable_hub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hub_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::MotorCmd>(GetArena());
    _impl_.hub_ = reinterpret_cast<::motor_msg::MotorCmd*>(p);
  }
  return _impl_.hub_;
}
inline ::motor_msg::MotorCmd* PROTOBUF_NONNULL LegCmd::mutable_hub()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::motor_msg::MotorCmd* _msg = _internal_mutable_hub();
  // @@protoc_insertion_point(field_mutable:motor_msg.LegCmd.hub)
  return _msg;
}
inline void LegCmd::set_allocated_hub(::motor_msg::MotorCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hub_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.hub_ = reinterpret_cast<::motor_msg::MotorCmd*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.LegCmd.hub)
}

// -------------------------------------------------------------------

// LegState

// .motor_msg.MotorState hip = 1;
inline bool LegState::has_hip() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hip_ != nullptr);
  return value;
}
inline void LegState::clear_hip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hip_ != nullptr) _impl_.hip_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::motor_msg::MotorState& LegState::_internal_hip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::MotorState* p = _impl_.hip_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::MotorState&>(::motor_msg::_MotorState_default_instance_);
}
inline const ::motor_msg::MotorState& LegState::hip() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.LegState.hip)
  return _internal_hip();
}
inline void LegState::unsafe_arena_set_allocated_hip(
    ::motor_msg::MotorState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hip_);
  }
  _impl_.hip_ = reinterpret_cast<::motor_msg::MotorState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.LegState.hip)
}
inline ::motor_msg::MotorState* PROTOBUF_NULLABLE LegState::release_hip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::motor_msg::MotorState* released = _impl_.hip_;
  _impl_.hip_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::MotorState* PROTOBUF_NULLABLE LegState::unsafe_arena_release_hip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.LegState.hip)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::motor_msg::MotorState* temp = _impl_.hip_;
  _impl_.hip_ = nullptr;
  return temp;
}
inline ::motor_msg::MotorState* PROTOBUF_NONNULL LegState::_internal_mutable_hip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hip_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::MotorState>(GetArena());
    _impl_.hip_ = reinterpret_cast<::motor_msg::MotorState*>(p);
  }
  return _impl_.hip_;
}
inline ::motor_msg::MotorState* PROTOBUF_NONNULL LegState::mutable_hip()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::motor_msg::MotorState* _msg = _internal_mutable_hip();
  // @@protoc_insertion_point(field_mutable:motor_msg.LegState.hip)
  return _msg;
}
inline void LegState::set_allocated_hip(::motor_msg::MotorState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hip_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.hip_ = reinterpret_cast<::motor_msg::MotorState*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.LegState.hip)
}

// .motor_msg.MotorState steering = 2;
inline bool LegState::has_steering() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.steering_ != nullptr);
  return value;
}
inline void LegState::clear_steering() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.steering_ != nullptr) _impl_.steering_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::motor_msg::MotorState& LegState::_internal_steering() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::MotorState* p = _impl_.steering_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::MotorState&>(::motor_msg::_MotorState_default_instance_);
}
inline const ::motor_msg::MotorState& LegState::steering() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.LegState.steering)
  return _internal_steering();
}
inline void LegState::unsafe_arena_set_allocated_steering(
    ::motor_msg::MotorState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.steering_);
  }
  _impl_.steering_ = reinterpret_cast<::motor_msg::MotorState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.LegState.steering)
}
inline ::motor_msg::MotorState* PROTOBUF_NULLABLE LegState::release_steering() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::motor_msg::MotorState* released = _impl_.steering_;
  _impl_.steering_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::MotorState* PROTOBUF_NULLABLE LegState::unsafe_arena_release_steering() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.LegState.steering)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::motor_msg::MotorState* temp = _impl_.steering_;
  _impl_.steering_ = nullptr;
  return temp;
}
inline ::motor_msg::MotorState* PROTOBUF_NONNULL LegState::_internal_mutable_steering() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.steering_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::MotorState>(GetArena());
    _impl_.steering_ = reinterpret_cast<::motor_msg::MotorState*>(p);
  }
  return _impl_.steering_;
}
inline ::motor_msg::MotorState* PROTOBUF_NONNULL LegState::mutable_steering()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::motor_msg::MotorState* _msg = _internal_mutable_steering();
  // @@protoc_insertion_point(field_mutable:motor_msg.LegState.steering)
  return _msg;
}
inline void LegState::set_allocated_steering(::motor_msg::MotorState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.steering_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.steering_ = reinterpret_cast<::motor_msg::MotorState*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.LegState.steering)
}

// .motor_msg.MotorState hub = 3;
inline bool LegState::has_hub() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hub_ != nullptr);
  return value;
}
inline void LegState::clear_hub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hub_ != nullptr) _impl_.hub_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::motor_msg::MotorState& LegState::_internal_hub() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::MotorState* p = _impl_.hub_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::MotorState&>(::motor_msg::_MotorState_default_instance_);
}
inline const ::motor_msg::MotorState& LegState::hub() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.LegState.hub)
  return _internal_hub();
}
inline void LegState::unsafe_arena_set_allocated_hub(
    ::motor_msg::MotorState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hub_);
  }
  _impl_.hub_ = reinterpret_cast<::motor_msg::MotorState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.LegState.hub)
}
inline ::motor_msg::MotorState* PROTOBUF_NULLABLE LegState::release_hub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::motor_msg::MotorState* released = _impl_.hub_;
  _impl_.hub_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::MotorState* PROTOBUF_NULLABLE LegState::unsafe_arena_release_hub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.LegState.hub)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::motor_msg::MotorState* temp = _impl_.hub_;
  _impl_.hub_ = nullptr;
  return temp;
}
inline ::motor_msg::MotorState* PROTOBUF_NONNULL LegState::_internal_mutable_hub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hub_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::MotorState>(GetArena());
    _impl_.hub_ = reinterpret_cast<::motor_msg::MotorState*>(p);
  }
  return _impl_.hub_;
}
inline ::motor_msg::MotorState* PROTOBUF_NONNULL LegState::mutable_hub()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::motor_msg::MotorState* _msg = _internal_mutable_hub();
  // @@protoc_insertion_point(field_mutable:motor_msg.LegState.hub)
  return _msg;
}
inline void LegState::set_allocated_hub(::motor_msg::MotorState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hub_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.hub_ = reinterpret_cast<::motor_msg::MotorState*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.LegState.hub)
}

// -------------------------------------------------------------------

// MotorCmdStamped

// .std_msg.Header header = 1;
inline bool MotorCmdStamped::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline const ::std_msg::Header& MotorCmdStamped::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::std_msg::Header* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::std_msg::Header&>(::std_msg::_Header_default_instance_);
}
inline const ::std_msg::Header& MotorCmdStamped::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorCmdStamped.header)
  return _internal_header();
}
inline void MotorCmdStamped::unsafe_arena_set_allocated_header(
    ::std_msg::Header* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::std_msg::Header*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorCmdStamped.header)
}
inline ::std_msg::Header* PROTOBUF_NULLABLE MotorCmdStamped::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::std_msg::Header* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::std_msg::Header* PROTOBUF_NULLABLE MotorCmdStamped::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorCmdStamped.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::std_msg::Header* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::std_msg::Header* PROTOBUF_NONNULL MotorCmdStamped::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::std_msg::Header>(GetArena());
    _impl_.header_ = reinterpret_cast<::std_msg::Header*>(p);
  }
  return _impl_.header_;
}
inline ::std_msg::Header* PROTOBUF_NONNULL MotorCmdStamped::mutable_header()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::std_msg::Header* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorCmdStamped.header)
  return _msg;
}
inline void MotorCmdStamped::set_allocated_header(::std_msg::Header* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::std_msg::Header*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorCmdStamped.header)
}

// .motor_msg.LegCmd module_a = 2;
inline bool MotorCmdStamped::has_module_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.module_a_ != nullptr);
  return value;
}
inline void MotorCmdStamped::clear_module_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_a_ != nullptr) _impl_.module_a_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::motor_msg::LegCmd& MotorCmdStamped::_internal_module_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::LegCmd* p = _impl_.module_a_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::LegCmd&>(::motor_msg::_LegCmd_default_instance_);
}
inline const ::motor_msg::LegCmd& MotorCmdStamped::module_a() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorCmdStamped.module_a)
  return _internal_module_a();
}
inline void MotorCmdStamped::unsafe_arena_set_allocated_module_a(
    ::motor_msg::LegCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.module_a_);
  }
  _impl_.module_a_ = reinterpret_cast<::motor_msg::LegCmd*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorCmdStamped.module_a)
}
inline ::motor_msg::LegCmd* PROTOBUF_NULLABLE MotorCmdStamped::release_module_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::motor_msg::LegCmd* released = _impl_.module_a_;
  _impl_.module_a_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::LegCmd* PROTOBUF_NULLABLE MotorCmdStamped::unsafe_arena_release_module_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorCmdStamped.module_a)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::motor_msg::LegCmd* temp = _impl_.module_a_;
  _impl_.module_a_ = nullptr;
  return temp;
}
inline ::motor_msg::LegCmd* PROTOBUF_NONNULL MotorCmdStamped::_internal_mutable_module_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_a_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::LegCmd>(GetArena());
    _impl_.module_a_ = reinterpret_cast<::motor_msg::LegCmd*>(p);
  }
  return _impl_.module_a_;
}
inline ::motor_msg::LegCmd* PROTOBUF_NONNULL MotorCmdStamped::mutable_module_a()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::motor_msg::LegCmd* _msg = _internal_mutable_module_a();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorCmdStamped.module_a)
  return _msg;
}
inline void MotorCmdStamped::set_allocated_module_a(::motor_msg::LegCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.module_a_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.module_a_ = reinterpret_cast<::motor_msg::LegCmd*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorCmdStamped.module_a)
}

// .motor_msg.LegCmd module_b = 3;
inline bool MotorCmdStamped::has_module_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.module_b_ != nullptr);
  return value;
}
inline void MotorCmdStamped::clear_module_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_b_ != nullptr) _impl_.module_b_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::motor_msg::LegCmd& MotorCmdStamped::_internal_module_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::LegCmd* p = _impl_.module_b_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::LegCmd&>(::motor_msg::_LegCmd_default_instance_);
}
inline const ::motor_msg::LegCmd& MotorCmdStamped::module_b() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorCmdStamped.module_b)
  return _internal_module_b();
}
inline void MotorCmdStamped::unsafe_arena_set_allocated_module_b(
    ::motor_msg::LegCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.module_b_);
  }
  _impl_.module_b_ = reinterpret_cast<::motor_msg::LegCmd*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorCmdStamped.module_b)
}
inline ::motor_msg::LegCmd* PROTOBUF_NULLABLE MotorCmdStamped::release_module_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::motor_msg::LegCmd* released = _impl_.module_b_;
  _impl_.module_b_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::LegCmd* PROTOBUF_NULLABLE MotorCmdStamped::unsafe_arena_release_module_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorCmdStamped.module_b)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::motor_msg::LegCmd* temp = _impl_.module_b_;
  _impl_.module_b_ = nullptr;
  return temp;
}
inline ::motor_msg::LegCmd* PROTOBUF_NONNULL MotorCmdStamped::_internal_mutable_module_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_b_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::LegCmd>(GetArena());
    _impl_.module_b_ = reinterpret_cast<::motor_msg::LegCmd*>(p);
  }
  return _impl_.module_b_;
}
inline ::motor_msg::LegCmd* PROTOBUF_NONNULL MotorCmdStamped::mutable_module_b()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::motor_msg::LegCmd* _msg = _internal_mutable_module_b();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorCmdStamped.module_b)
  return _msg;
}
inline void MotorCmdStamped::set_allocated_module_b(::motor_msg::LegCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.module_b_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.module_b_ = reinterpret_cast<::motor_msg::LegCmd*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorCmdStamped.module_b)
}

// .motor_msg.LegCmd module_c = 4;
inline bool MotorCmdStamped::has_module_c() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.module_c_ != nullptr);
  return value;
}
inline void MotorCmdStamped::clear_module_c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_c_ != nullptr) _impl_.module_c_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::motor_msg::LegCmd& MotorCmdStamped::_internal_module_c() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::LegCmd* p = _impl_.module_c_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::LegCmd&>(::motor_msg::_LegCmd_default_instance_);
}
inline const ::motor_msg::LegCmd& MotorCmdStamped::module_c() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorCmdStamped.module_c)
  return _internal_module_c();
}
inline void MotorCmdStamped::unsafe_arena_set_allocated_module_c(
    ::motor_msg::LegCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.module_c_);
  }
  _impl_.module_c_ = reinterpret_cast<::motor_msg::LegCmd*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorCmdStamped.module_c)
}
inline ::motor_msg::LegCmd* PROTOBUF_NULLABLE MotorCmdStamped::release_module_c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::motor_msg::LegCmd* released = _impl_.module_c_;
  _impl_.module_c_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::LegCmd* PROTOBUF_NULLABLE MotorCmdStamped::unsafe_arena_release_module_c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorCmdStamped.module_c)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::motor_msg::LegCmd* temp = _impl_.module_c_;
  _impl_.module_c_ = nullptr;
  return temp;
}
inline ::motor_msg::LegCmd* PROTOBUF_NONNULL MotorCmdStamped::_internal_mutable_module_c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_c_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::LegCmd>(GetArena());
    _impl_.module_c_ = reinterpret_cast<::motor_msg::LegCmd*>(p);
  }
  return _impl_.module_c_;
}
inline ::motor_msg::LegCmd* PROTOBUF_NONNULL MotorCmdStamped::mutable_module_c()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::motor_msg::LegCmd* _msg = _internal_mutable_module_c();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorCmdStamped.module_c)
  return _msg;
}
inline void MotorCmdStamped::set_allocated_module_c(::motor_msg::LegCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.module_c_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.module_c_ = reinterpret_cast<::motor_msg::LegCmd*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorCmdStamped.module_c)
}

// .motor_msg.LegCmd module_d = 5;
inline bool MotorCmdStamped::has_module_d() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.module_d_ != nullptr);
  return value;
}
inline void MotorCmdStamped::clear_module_d() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_d_ != nullptr) _impl_.module_d_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::motor_msg::LegCmd& MotorCmdStamped::_internal_module_d() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::LegCmd* p = _impl_.module_d_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::LegCmd&>(::motor_msg::_LegCmd_default_instance_);
}
inline const ::motor_msg::LegCmd& MotorCmdStamped::module_d() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorCmdStamped.module_d)
  return _internal_module_d();
}
inline void MotorCmdStamped::unsafe_arena_set_allocated_module_d(
    ::motor_msg::LegCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.module_d_);
  }
  _impl_.module_d_ = reinterpret_cast<::motor_msg::LegCmd*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorCmdStamped.module_d)
}
inline ::motor_msg::LegCmd* PROTOBUF_NULLABLE MotorCmdStamped::release_module_d() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::motor_msg::LegCmd* released = _impl_.module_d_;
  _impl_.module_d_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::LegCmd* PROTOBUF_NULLABLE MotorCmdStamped::unsafe_arena_release_module_d() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorCmdStamped.module_d)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::motor_msg::LegCmd* temp = _impl_.module_d_;
  _impl_.module_d_ = nullptr;
  return temp;
}
inline ::motor_msg::LegCmd* PROTOBUF_NONNULL MotorCmdStamped::_internal_mutable_module_d() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_d_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::LegCmd>(GetArena());
    _impl_.module_d_ = reinterpret_cast<::motor_msg::LegCmd*>(p);
  }
  return _impl_.module_d_;
}
inline ::motor_msg::LegCmd* PROTOBUF_NONNULL MotorCmdStamped::mutable_module_d()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::motor_msg::LegCmd* _msg = _internal_mutable_module_d();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorCmdStamped.module_d)
  return _msg;
}
inline void MotorCmdStamped::set_allocated_module_d(::motor_msg::LegCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.module_d_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.module_d_ = reinterpret_cast<::motor_msg::LegCmd*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorCmdStamped.module_d)
}

// -------------------------------------------------------------------

// MotorStateStamped

// .std_msg.Header header = 1;
inline bool MotorStateStamped::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline const ::std_msg::Header& MotorStateStamped::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::std_msg::Header* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::std_msg::Header&>(::std_msg::_Header_default_instance_);
}
inline const ::std_msg::Header& MotorStateStamped::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorStateStamped.header)
  return _internal_header();
}
inline void MotorStateStamped::unsafe_arena_set_allocated_header(
    ::std_msg::Header* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::std_msg::Header*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorStateStamped.header)
}
inline ::std_msg::Header* PROTOBUF_NULLABLE MotorStateStamped::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::std_msg::Header* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::std_msg::Header* PROTOBUF_NULLABLE MotorStateStamped::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorStateStamped.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::std_msg::Header* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::std_msg::Header* PROTOBUF_NONNULL MotorStateStamped::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::std_msg::Header>(GetArena());
    _impl_.header_ = reinterpret_cast<::std_msg::Header*>(p);
  }
  return _impl_.header_;
}
inline ::std_msg::Header* PROTOBUF_NONNULL MotorStateStamped::mutable_header()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::std_msg::Header* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorStateStamped.header)
  return _msg;
}
inline void MotorStateStamped::set_allocated_header(::std_msg::Header* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::std_msg::Header*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorStateStamped.header)
}

// .motor_msg.LegState module_a = 2;
inline bool MotorStateStamped::has_module_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.module_a_ != nullptr);
  return value;
}
inline void MotorStateStamped::clear_module_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_a_ != nullptr) _impl_.module_a_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::motor_msg::LegState& MotorStateStamped::_internal_module_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::LegState* p = _impl_.module_a_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::LegState&>(::motor_msg::_LegState_default_instance_);
}
inline const ::motor_msg::LegState& MotorStateStamped::module_a() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorStateStamped.module_a)
  return _internal_module_a();
}
inline void MotorStateStamped::unsafe_arena_set_allocated_module_a(
    ::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.module_a_);
  }
  _impl_.module_a_ = reinterpret_cast<::motor_msg::LegState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorStateStamped.module_a)
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::release_module_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::motor_msg::LegState* released = _impl_.module_a_;
  _impl_.module_a_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::unsafe_arena_release_module_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorStateStamped.module_a)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::motor_msg::LegState* temp = _impl_.module_a_;
  _impl_.module_a_ = nullptr;
  return temp;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::_internal_mutable_module_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_a_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::LegState>(GetArena());
    _impl_.module_a_ = reinterpret_cast<::motor_msg::LegState*>(p);
  }
  return _impl_.module_a_;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::mutable_module_a()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::motor_msg::LegState* _msg = _internal_mutable_module_a();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorStateStamped.module_a)
  return _msg;
}
inline void MotorStateStamped::set_allocated_module_a(::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.module_a_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.module_a_ = reinterpret_cast<::motor_msg::LegState*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorStateStamped.module_a)
}

// .motor_msg.LegState module_b = 3;
inline bool MotorStateStamped::has_module_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.module_b_ != nullptr);
  return value;
}
inline void MotorStateStamped::clear_module_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_b_ != nullptr) _impl_.module_b_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::motor_msg::LegState& MotorStateStamped::_internal_module_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::LegState* p = _impl_.module_b_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::LegState&>(::motor_msg::_LegState_default_instance_);
}
inline const ::motor_msg::LegState& MotorStateStamped::module_b() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorStateStamped.module_b)
  return _internal_module_b();
}
inline void MotorStateStamped::unsafe_arena_set_allocated_module_b(
    ::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.module_b_);
  }
  _impl_.module_b_ = reinterpret_cast<::motor_msg::LegState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorStateStamped.module_b)
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::release_module_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::motor_msg::LegState* released = _impl_.module_b_;
  _impl_.module_b_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::unsafe_arena_release_module_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorStateStamped.module_b)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::motor_msg::LegState* temp = _impl_.module_b_;
  _impl_.module_b_ = nullptr;
  return temp;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::_internal_mutable_module_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_b_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::LegState>(GetArena());
    _impl_.module_b_ = reinterpret_cast<::motor_msg::LegState*>(p);
  }
  return _impl_.module_b_;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::mutable_module_b()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::motor_msg::LegState* _msg = _internal_mutable_module_b();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorStateStamped.module_b)
  return _msg;
}
inline void MotorStateStamped::set_allocated_module_b(::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.module_b_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.module_b_ = reinterpret_cast<::motor_msg::LegState*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorStateStamped.module_b)
}

// .motor_msg.LegState module_c = 4;
inline bool MotorStateStamped::has_module_c() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.module_c_ != nullptr);
  return value;
}
inline void MotorStateStamped::clear_module_c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_c_ != nullptr) _impl_.module_c_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::motor_msg::LegState& MotorStateStamped::_internal_module_c() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::LegState* p = _impl_.module_c_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::LegState&>(::motor_msg::_LegState_default_instance_);
}
inline const ::motor_msg::LegState& MotorStateStamped::module_c() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorStateStamped.module_c)
  return _internal_module_c();
}
inline void MotorStateStamped::unsafe_arena_set_allocated_module_c(
    ::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.module_c_);
  }
  _impl_.module_c_ = reinterpret_cast<::motor_msg::LegState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorStateStamped.module_c)
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::release_module_c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::motor_msg::LegState* released = _impl_.module_c_;
  _impl_.module_c_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::unsafe_arena_release_module_c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorStateStamped.module_c)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::motor_msg::LegState* temp = _impl_.module_c_;
  _impl_.module_c_ = nullptr;
  return temp;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::_internal_mutable_module_c() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_c_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::LegState>(GetArena());
    _impl_.module_c_ = reinterpret_cast<::motor_msg::LegState*>(p);
  }
  return _impl_.module_c_;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::mutable_module_c()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::motor_msg::LegState* _msg = _internal_mutable_module_c();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorStateStamped.module_c)
  return _msg;
}
inline void MotorStateStamped::set_allocated_module_c(::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.module_c_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.module_c_ = reinterpret_cast<::motor_msg::LegState*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorStateStamped.module_c)
}

// .motor_msg.LegState module_d = 5;
inline bool MotorStateStamped::has_module_d() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.module_d_ != nullptr);
  return value;
}
inline void MotorStateStamped::clear_module_d() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_d_ != nullptr) _impl_.module_d_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::motor_msg::LegState& MotorStateStamped::_internal_module_d() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::LegState* p = _impl_.module_d_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::LegState&>(::motor_msg::_LegState_default_instance_);
}
inline const ::motor_msg::LegState& MotorStateStamped::module_d() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorStateStamped.module_d)
  return _internal_module_d();
}
inline void MotorStateStamped::unsafe_arena_set_allocated_module_d(
    ::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.module_d_);
  }
  _impl_.module_d_ = reinterpret_cast<::motor_msg::LegState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorStateStamped.module_d)
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::release_module_d() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::motor_msg::LegState* released = _impl_.module_d_;
  _impl_.module_d_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::unsafe_arena_release_module_d() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorStateStamped.module_d)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::motor_msg::LegState* temp = _impl_.module_d_;
  _impl_.module_d_ = nullptr;
  return temp;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::_internal_mutable_module_d() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.module_d_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::LegState>(GetArena());
    _impl_.module_d_ = reinterpret_cast<::motor_msg::LegState*>(p);
  }
  return _impl_.module_d_;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::mutable_module_d()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::motor_msg::LegState* _msg = _internal_mutable_module_d();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorStateStamped.module_d)
  return _msg;
}
inline void MotorStateStamped::set_allocated_module_d(::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.module_d_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.module_d_ = reinterpret_cast<::motor_msg::LegState*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorStateStamped.module_d)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace motor_msg


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // Motor_2eproto_2epb_2eh
