// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Motor.proto
// Protobuf C++ Version: 6.31.0

#ifndef Motor_2eproto_2epb_2eh
#define Motor_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "std.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Motor_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Motor_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_Motor_2eproto;
}  // extern "C"
namespace motor_msg {
class DcState;
struct DcStateDefaultTypeInternal;
extern DcStateDefaultTypeInternal _DcState_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DcState_class_data_;
class LegCmd;
struct LegCmdDefaultTypeInternal;
extern LegCmdDefaultTypeInternal _LegCmd_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LegCmd_class_data_;
class LegState;
struct LegStateDefaultTypeInternal;
extern LegStateDefaultTypeInternal _LegState_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LegState_class_data_;
class MotorCmd;
struct MotorCmdDefaultTypeInternal;
extern MotorCmdDefaultTypeInternal _MotorCmd_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MotorCmd_class_data_;
class MotorCmdStamped;
struct MotorCmdStampedDefaultTypeInternal;
extern MotorCmdStampedDefaultTypeInternal _MotorCmdStamped_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MotorCmdStamped_class_data_;
class MotorStateStamped;
struct MotorStateStampedDefaultTypeInternal;
extern MotorStateStampedDefaultTypeInternal _MotorStateStamped_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MotorStateStamped_class_data_;
class ServoCmd;
struct ServoCmdDefaultTypeInternal;
extern ServoCmdDefaultTypeInternal _ServoCmd_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ServoCmd_class_data_;
class ServoState;
struct ServoStateDefaultTypeInternal;
extern ServoStateDefaultTypeInternal _ServoState_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ServoState_class_data_;
}  // namespace motor_msg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace motor_msg {

// ===================================================================


// -------------------------------------------------------------------

class ServoState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:motor_msg.ServoState) */ {
 public:
  inline ServoState() : ServoState(nullptr) {}
  ~ServoState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ServoState* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ServoState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ServoState(::google::protobuf::internal::ConstantInitialized);

  inline ServoState(const ServoState& from) : ServoState(nullptr, from) {}
  inline ServoState(ServoState&& from) noexcept
      : ServoState(nullptr, ::std::move(from)) {}
  inline ServoState& operator=(const ServoState& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServoState& operator=(ServoState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServoState& default_instance() {
    return *reinterpret_cast<const ServoState*>(
        &_ServoState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ServoState& a, ServoState& b) { a.Swap(&b); }
  inline void Swap(ServoState* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServoState* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServoState* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ServoState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServoState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ServoState& from) { ServoState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ServoState* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "motor_msg.ServoState"; }

 protected:
  explicit ServoState(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ServoState(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ServoState& from);
  ServoState(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ServoState&& from) noexcept
      : ServoState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBusFieldNumber = 1,
    kIdFieldNumber = 2,
    kPositionFieldNumber = 3,
    kVelocityFieldNumber = 4,
    kCurrentFieldNumber = 5,
  };
  // uint32 bus = 1;
  void clear_bus() ;
  ::uint32_t bus() const;
  void set_bus(::uint32_t value);

  private:
  ::uint32_t _internal_bus() const;
  void _internal_set_bus(::uint32_t value);

  public:
  // uint32 id = 2;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // float position = 3;
  void clear_position() ;
  float position() const;
  void set_position(float value);

  private:
  float _internal_position() const;
  void _internal_set_position(float value);

  public:
  // float velocity = 4;
  void clear_velocity() ;
  float velocity() const;
  void set_velocity(float value);

  private:
  float _internal_velocity() const;
  void _internal_set_velocity(float value);

  public:
  // float current = 5;
  void clear_current() ;
  float current() const;
  void set_current(float value);

  private:
  float _internal_current() const;
  void _internal_set_current(float value);

  public:
  // @@protoc_insertion_point(class_scope:motor_msg.ServoState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ServoState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t bus_;
    ::uint32_t id_;
    float position_;
    float velocity_;
    float current_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Motor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ServoState_class_data_;
// -------------------------------------------------------------------

class ServoCmd final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:motor_msg.ServoCmd) */ {
 public:
  inline ServoCmd() : ServoCmd(nullptr) {}
  ~ServoCmd() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ServoCmd* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ServoCmd));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ServoCmd(::google::protobuf::internal::ConstantInitialized);

  inline ServoCmd(const ServoCmd& from) : ServoCmd(nullptr, from) {}
  inline ServoCmd(ServoCmd&& from) noexcept
      : ServoCmd(nullptr, ::std::move(from)) {}
  inline ServoCmd& operator=(const ServoCmd& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServoCmd& operator=(ServoCmd&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServoCmd& default_instance() {
    return *reinterpret_cast<const ServoCmd*>(
        &_ServoCmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ServoCmd& a, ServoCmd& b) { a.Swap(&b); }
  inline void Swap(ServoCmd* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServoCmd* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServoCmd* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ServoCmd>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServoCmd& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ServoCmd& from) { ServoCmd::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ServoCmd* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "motor_msg.ServoCmd"; }

 protected:
  explicit ServoCmd(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ServoCmd(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ServoCmd& from);
  ServoCmd(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ServoCmd&& from) noexcept
      : ServoCmd(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBusFieldNumber = 1,
    kIdFieldNumber = 2,
    kPositionFieldNumber = 3,
    kCurrentLimitFieldNumber = 4,
    kKpFieldNumber = 5,
    kKiFieldNumber = 6,
    kKdFieldNumber = 7,
  };
  // uint32 bus = 1;
  void clear_bus() ;
  ::uint32_t bus() const;
  void set_bus(::uint32_t value);

  private:
  ::uint32_t _internal_bus() const;
  void _internal_set_bus(::uint32_t value);

  public:
  // uint32 id = 2;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // float position = 3;
  void clear_position() ;
  float position() const;
  void set_position(float value);

  private:
  float _internal_position() const;
  void _internal_set_position(float value);

  public:
  // float current_limit = 4;
  void clear_current_limit() ;
  float current_limit() const;
  void set_current_limit(float value);

  private:
  float _internal_current_limit() const;
  void _internal_set_current_limit(float value);

  public:
  // float kp = 5;
  void clear_kp() ;
  float kp() const;
  void set_kp(float value);

  private:
  float _internal_kp() const;
  void _internal_set_kp(float value);

  public:
  // float ki = 6;
  void clear_ki() ;
  float ki() const;
  void set_ki(float value);

  private:
  float _internal_ki() const;
  void _internal_set_ki(float value);

  public:
  // float kd = 7;
  void clear_kd() ;
  float kd() const;
  void set_kd(float value);

  private:
  float _internal_kd() const;
  void _internal_set_kd(float value);

  public:
  // @@protoc_insertion_point(class_scope:motor_msg.ServoCmd)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ServoCmd& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t bus_;
    ::uint32_t id_;
    float position_;
    float current_limit_;
    float kp_;
    float ki_;
    float kd_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Motor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ServoCmd_class_data_;
// -------------------------------------------------------------------

class MotorCmd final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:motor_msg.MotorCmd) */ {
 public:
  inline MotorCmd() : MotorCmd(nullptr) {}
  ~MotorCmd() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MotorCmd* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MotorCmd));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MotorCmd(::google::protobuf::internal::ConstantInitialized);

  inline MotorCmd(const MotorCmd& from) : MotorCmd(nullptr, from) {}
  inline MotorCmd(MotorCmd&& from) noexcept
      : MotorCmd(nullptr, ::std::move(from)) {}
  inline MotorCmd& operator=(const MotorCmd& from) {
    CopyFrom(from);
    return *this;
  }
  inline MotorCmd& operator=(MotorCmd&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MotorCmd& default_instance() {
    return *reinterpret_cast<const MotorCmd*>(
        &_MotorCmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MotorCmd& a, MotorCmd& b) { a.Swap(&b); }
  inline void Swap(MotorCmd* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MotorCmd* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MotorCmd* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MotorCmd>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MotorCmd& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MotorCmd& from) { MotorCmd::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MotorCmd* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "motor_msg.MotorCmd"; }

 protected:
  explicit MotorCmd(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MotorCmd(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MotorCmd& from);
  MotorCmd(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MotorCmd&& from) noexcept
      : MotorCmd(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionFieldNumber = 1,
    kTorqueFieldNumber = 2,
    kKpFieldNumber = 3,
    kKiFieldNumber = 4,
    kKdFieldNumber = 5,
  };
  // float position = 1;
  void clear_position() ;
  float position() const;
  void set_position(float value);

  private:
  float _internal_position() const;
  void _internal_set_position(float value);

  public:
  // float torque = 2;
  void clear_torque() ;
  float torque() const;
  void set_torque(float value);

  private:
  float _internal_torque() const;
  void _internal_set_torque(float value);

  public:
  // float kp = 3;
  void clear_kp() ;
  float kp() const;
  void set_kp(float value);

  private:
  float _internal_kp() const;
  void _internal_set_kp(float value);

  public:
  // float ki = 4;
  void clear_ki() ;
  float ki() const;
  void set_ki(float value);

  private:
  float _internal_ki() const;
  void _internal_set_ki(float value);

  public:
  // float kd = 5;
  void clear_kd() ;
  float kd() const;
  void set_kd(float value);

  private:
  float _internal_kd() const;
  void _internal_set_kd(float value);

  public:
  // @@protoc_insertion_point(class_scope:motor_msg.MotorCmd)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MotorCmd& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float position_;
    float torque_;
    float kp_;
    float ki_;
    float kd_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Motor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MotorCmd_class_data_;
// -------------------------------------------------------------------

class DcState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:motor_msg.DcState) */ {
 public:
  inline DcState() : DcState(nullptr) {}
  ~DcState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DcState* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DcState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DcState(::google::protobuf::internal::ConstantInitialized);

  inline DcState(const DcState& from) : DcState(nullptr, from) {}
  inline DcState(DcState&& from) noexcept
      : DcState(nullptr, ::std::move(from)) {}
  inline DcState& operator=(const DcState& from) {
    CopyFrom(from);
    return *this;
  }
  inline DcState& operator=(DcState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DcState& default_instance() {
    return *reinterpret_cast<const DcState*>(
        &_DcState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(DcState& a, DcState& b) { a.Swap(&b); }
  inline void Swap(DcState* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DcState* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DcState* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DcState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DcState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DcState& from) { DcState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DcState* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "motor_msg.DcState"; }

 protected:
  explicit DcState(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DcState(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DcState& from);
  DcState(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DcState&& from) noexcept
      : DcState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionFieldNumber = 1,
    kVelocityFieldNumber = 2,
    kCurrentFieldNumber = 3,
    kTorqueFieldNumber = 4,
  };
  // float position = 1;
  void clear_position() ;
  float position() const;
  void set_position(float value);

  private:
  float _internal_position() const;
  void _internal_set_position(float value);

  public:
  // float velocity = 2;
  void clear_velocity() ;
  float velocity() const;
  void set_velocity(float value);

  private:
  float _internal_velocity() const;
  void _internal_set_velocity(float value);

  public:
  // float current = 3;
  void clear_current() ;
  float current() const;
  void set_current(float value);

  private:
  float _internal_current() const;
  void _internal_set_current(float value);

  public:
  // float torque = 4;
  void clear_torque() ;
  float torque() const;
  void set_torque(float value);

  private:
  float _internal_torque() const;
  void _internal_set_torque(float value);

  public:
  // @@protoc_insertion_point(class_scope:motor_msg.DcState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DcState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float position_;
    float velocity_;
    float current_;
    float torque_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Motor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DcState_class_data_;
// -------------------------------------------------------------------

class LegState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:motor_msg.LegState) */ {
 public:
  inline LegState() : LegState(nullptr) {}
  ~LegState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LegState* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LegState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LegState(::google::protobuf::internal::ConstantInitialized);

  inline LegState(const LegState& from) : LegState(nullptr, from) {}
  inline LegState(LegState&& from) noexcept
      : LegState(nullptr, ::std::move(from)) {}
  inline LegState& operator=(const LegState& from) {
    CopyFrom(from);
    return *this;
  }
  inline LegState& operator=(LegState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LegState& default_instance() {
    return *reinterpret_cast<const LegState*>(
        &_LegState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(LegState& a, LegState& b) { a.Swap(&b); }
  inline void Swap(LegState* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LegState* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LegState* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LegState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LegState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LegState& from) { LegState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LegState* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "motor_msg.LegState"; }

 protected:
  explicit LegState(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LegState(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LegState& from);
  LegState(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LegState&& from) noexcept
      : LegState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDcFieldNumber = 1,
    kServoFieldNumber = 2,
  };
  // .motor_msg.DcState dc = 1;
  bool has_dc() const;
  void clear_dc() ;
  const ::motor_msg::DcState& dc() const;
  [[nodiscard]] ::motor_msg::DcState* PROTOBUF_NULLABLE release_dc();
  ::motor_msg::DcState* PROTOBUF_NONNULL mutable_dc();
  void set_allocated_dc(::motor_msg::DcState* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_dc(::motor_msg::DcState* PROTOBUF_NULLABLE value);
  ::motor_msg::DcState* PROTOBUF_NULLABLE unsafe_arena_release_dc();

  private:
  const ::motor_msg::DcState& _internal_dc() const;
  ::motor_msg::DcState* PROTOBUF_NONNULL _internal_mutable_dc();

  public:
  // .motor_msg.ServoState servo = 2;
  bool has_servo() const;
  void clear_servo() ;
  const ::motor_msg::ServoState& servo() const;
  [[nodiscard]] ::motor_msg::ServoState* PROTOBUF_NULLABLE release_servo();
  ::motor_msg::ServoState* PROTOBUF_NONNULL mutable_servo();
  void set_allocated_servo(::motor_msg::ServoState* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_servo(::motor_msg::ServoState* PROTOBUF_NULLABLE value);
  ::motor_msg::ServoState* PROTOBUF_NULLABLE unsafe_arena_release_servo();

  private:
  const ::motor_msg::ServoState& _internal_servo() const;
  ::motor_msg::ServoState* PROTOBUF_NONNULL _internal_mutable_servo();

  public:
  // @@protoc_insertion_point(class_scope:motor_msg.LegState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LegState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::motor_msg::DcState* PROTOBUF_NULLABLE dc_;
    ::motor_msg::ServoState* PROTOBUF_NULLABLE servo_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Motor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LegState_class_data_;
// -------------------------------------------------------------------

class LegCmd final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:motor_msg.LegCmd) */ {
 public:
  inline LegCmd() : LegCmd(nullptr) {}
  ~LegCmd() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LegCmd* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LegCmd));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LegCmd(::google::protobuf::internal::ConstantInitialized);

  inline LegCmd(const LegCmd& from) : LegCmd(nullptr, from) {}
  inline LegCmd(LegCmd&& from) noexcept
      : LegCmd(nullptr, ::std::move(from)) {}
  inline LegCmd& operator=(const LegCmd& from) {
    CopyFrom(from);
    return *this;
  }
  inline LegCmd& operator=(LegCmd&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LegCmd& default_instance() {
    return *reinterpret_cast<const LegCmd*>(
        &_LegCmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(LegCmd& a, LegCmd& b) { a.Swap(&b); }
  inline void Swap(LegCmd* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LegCmd* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LegCmd* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LegCmd>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LegCmd& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LegCmd& from) { LegCmd::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LegCmd* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "motor_msg.LegCmd"; }

 protected:
  explicit LegCmd(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LegCmd(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LegCmd& from);
  LegCmd(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LegCmd&& from) noexcept
      : LegCmd(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDcFieldNumber = 1,
    kServoFieldNumber = 2,
  };
  // .motor_msg.MotorCmd dc = 1;
  bool has_dc() const;
  void clear_dc() ;
  const ::motor_msg::MotorCmd& dc() const;
  [[nodiscard]] ::motor_msg::MotorCmd* PROTOBUF_NULLABLE release_dc();
  ::motor_msg::MotorCmd* PROTOBUF_NONNULL mutable_dc();
  void set_allocated_dc(::motor_msg::MotorCmd* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_dc(::motor_msg::MotorCmd* PROTOBUF_NULLABLE value);
  ::motor_msg::MotorCmd* PROTOBUF_NULLABLE unsafe_arena_release_dc();

  private:
  const ::motor_msg::MotorCmd& _internal_dc() const;
  ::motor_msg::MotorCmd* PROTOBUF_NONNULL _internal_mutable_dc();

  public:
  // .motor_msg.ServoCmd servo = 2;
  bool has_servo() const;
  void clear_servo() ;
  const ::motor_msg::ServoCmd& servo() const;
  [[nodiscard]] ::motor_msg::ServoCmd* PROTOBUF_NULLABLE release_servo();
  ::motor_msg::ServoCmd* PROTOBUF_NONNULL mutable_servo();
  void set_allocated_servo(::motor_msg::ServoCmd* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_servo(::motor_msg::ServoCmd* PROTOBUF_NULLABLE value);
  ::motor_msg::ServoCmd* PROTOBUF_NULLABLE unsafe_arena_release_servo();

  private:
  const ::motor_msg::ServoCmd& _internal_servo() const;
  ::motor_msg::ServoCmd* PROTOBUF_NONNULL _internal_mutable_servo();

  public:
  // @@protoc_insertion_point(class_scope:motor_msg.LegCmd)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LegCmd& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::motor_msg::MotorCmd* PROTOBUF_NULLABLE dc_;
    ::motor_msg::ServoCmd* PROTOBUF_NULLABLE servo_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Motor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LegCmd_class_data_;
// -------------------------------------------------------------------

class MotorStateStamped final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:motor_msg.MotorStateStamped) */ {
 public:
  inline MotorStateStamped() : MotorStateStamped(nullptr) {}
  ~MotorStateStamped() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MotorStateStamped* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MotorStateStamped));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MotorStateStamped(::google::protobuf::internal::ConstantInitialized);

  inline MotorStateStamped(const MotorStateStamped& from) : MotorStateStamped(nullptr, from) {}
  inline MotorStateStamped(MotorStateStamped&& from) noexcept
      : MotorStateStamped(nullptr, ::std::move(from)) {}
  inline MotorStateStamped& operator=(const MotorStateStamped& from) {
    CopyFrom(from);
    return *this;
  }
  inline MotorStateStamped& operator=(MotorStateStamped&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MotorStateStamped& default_instance() {
    return *reinterpret_cast<const MotorStateStamped*>(
        &_MotorStateStamped_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(MotorStateStamped& a, MotorStateStamped& b) { a.Swap(&b); }
  inline void Swap(MotorStateStamped* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MotorStateStamped* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MotorStateStamped* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MotorStateStamped>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MotorStateStamped& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MotorStateStamped& from) { MotorStateStamped::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MotorStateStamped* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "motor_msg.MotorStateStamped"; }

 protected:
  explicit MotorStateStamped(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MotorStateStamped(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MotorStateStamped& from);
  MotorStateStamped(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MotorStateStamped&& from) noexcept
      : MotorStateStamped(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeaderFieldNumber = 1,
    kL1FieldNumber = 2,
    kL2FieldNumber = 3,
    kL3FieldNumber = 4,
    kR1FieldNumber = 5,
    kR2FieldNumber = 6,
    kR3FieldNumber = 7,
  };
  // .std_msg.Header header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::std_msg::Header& header() const;
  [[nodiscard]] ::std_msg::Header* PROTOBUF_NULLABLE release_header();
  ::std_msg::Header* PROTOBUF_NONNULL mutable_header();
  void set_allocated_header(::std_msg::Header* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header(::std_msg::Header* PROTOBUF_NULLABLE value);
  ::std_msg::Header* PROTOBUF_NULLABLE unsafe_arena_release_header();

  private:
  const ::std_msg::Header& _internal_header() const;
  ::std_msg::Header* PROTOBUF_NONNULL _internal_mutable_header();

  public:
  // .motor_msg.LegState L1 = 2;
  bool has_l1() const;
  void clear_l1() ;
  const ::motor_msg::LegState& l1() const;
  [[nodiscard]] ::motor_msg::LegState* PROTOBUF_NULLABLE release_l1();
  ::motor_msg::LegState* PROTOBUF_NONNULL mutable_l1();
  void set_allocated_l1(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_l1(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  ::motor_msg::LegState* PROTOBUF_NULLABLE unsafe_arena_release_l1();

  private:
  const ::motor_msg::LegState& _internal_l1() const;
  ::motor_msg::LegState* PROTOBUF_NONNULL _internal_mutable_l1();

  public:
  // .motor_msg.LegState L2 = 3;
  bool has_l2() const;
  void clear_l2() ;
  const ::motor_msg::LegState& l2() const;
  [[nodiscard]] ::motor_msg::LegState* PROTOBUF_NULLABLE release_l2();
  ::motor_msg::LegState* PROTOBUF_NONNULL mutable_l2();
  void set_allocated_l2(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_l2(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  ::motor_msg::LegState* PROTOBUF_NULLABLE unsafe_arena_release_l2();

  private:
  const ::motor_msg::LegState& _internal_l2() const;
  ::motor_msg::LegState* PROTOBUF_NONNULL _internal_mutable_l2();

  public:
  // .motor_msg.LegState L3 = 4;
  bool has_l3() const;
  void clear_l3() ;
  const ::motor_msg::LegState& l3() const;
  [[nodiscard]] ::motor_msg::LegState* PROTOBUF_NULLABLE release_l3();
  ::motor_msg::LegState* PROTOBUF_NONNULL mutable_l3();
  void set_allocated_l3(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_l3(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  ::motor_msg::LegState* PROTOBUF_NULLABLE unsafe_arena_release_l3();

  private:
  const ::motor_msg::LegState& _internal_l3() const;
  ::motor_msg::LegState* PROTOBUF_NONNULL _internal_mutable_l3();

  public:
  // .motor_msg.LegState R1 = 5;
  bool has_r1() const;
  void clear_r1() ;
  const ::motor_msg::LegState& r1() const;
  [[nodiscard]] ::motor_msg::LegState* PROTOBUF_NULLABLE release_r1();
  ::motor_msg::LegState* PROTOBUF_NONNULL mutable_r1();
  void set_allocated_r1(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_r1(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  ::motor_msg::LegState* PROTOBUF_NULLABLE unsafe_arena_release_r1();

  private:
  const ::motor_msg::LegState& _internal_r1() const;
  ::motor_msg::LegState* PROTOBUF_NONNULL _internal_mutable_r1();

  public:
  // .motor_msg.LegState R2 = 6;
  bool has_r2() const;
  void clear_r2() ;
  const ::motor_msg::LegState& r2() const;
  [[nodiscard]] ::motor_msg::LegState* PROTOBUF_NULLABLE release_r2();
  ::motor_msg::LegState* PROTOBUF_NONNULL mutable_r2();
  void set_allocated_r2(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_r2(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  ::motor_msg::LegState* PROTOBUF_NULLABLE unsafe_arena_release_r2();

  private:
  const ::motor_msg::LegState& _internal_r2() const;
  ::motor_msg::LegState* PROTOBUF_NONNULL _internal_mutable_r2();

  public:
  // .motor_msg.LegState R3 = 7;
  bool has_r3() const;
  void clear_r3() ;
  const ::motor_msg::LegState& r3() const;
  [[nodiscard]] ::motor_msg::LegState* PROTOBUF_NULLABLE release_r3();
  ::motor_msg::LegState* PROTOBUF_NONNULL mutable_r3();
  void set_allocated_r3(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_r3(::motor_msg::LegState* PROTOBUF_NULLABLE value);
  ::motor_msg::LegState* PROTOBUF_NULLABLE unsafe_arena_release_r3();

  private:
  const ::motor_msg::LegState& _internal_r3() const;
  ::motor_msg::LegState* PROTOBUF_NONNULL _internal_mutable_r3();

  public:
  // @@protoc_insertion_point(class_scope:motor_msg.MotorStateStamped)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   7, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MotorStateStamped& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::std_msg::Header* PROTOBUF_NULLABLE header_;
    ::motor_msg::LegState* PROTOBUF_NULLABLE l1_;
    ::motor_msg::LegState* PROTOBUF_NULLABLE l2_;
    ::motor_msg::LegState* PROTOBUF_NULLABLE l3_;
    ::motor_msg::LegState* PROTOBUF_NULLABLE r1_;
    ::motor_msg::LegState* PROTOBUF_NULLABLE r2_;
    ::motor_msg::LegState* PROTOBUF_NULLABLE r3_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Motor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MotorStateStamped_class_data_;
// -------------------------------------------------------------------

class MotorCmdStamped final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:motor_msg.MotorCmdStamped) */ {
 public:
  inline MotorCmdStamped() : MotorCmdStamped(nullptr) {}
  ~MotorCmdStamped() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MotorCmdStamped* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MotorCmdStamped));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MotorCmdStamped(::google::protobuf::internal::ConstantInitialized);

  inline MotorCmdStamped(const MotorCmdStamped& from) : MotorCmdStamped(nullptr, from) {}
  inline MotorCmdStamped(MotorCmdStamped&& from) noexcept
      : MotorCmdStamped(nullptr, ::std::move(from)) {}
  inline MotorCmdStamped& operator=(const MotorCmdStamped& from) {
    CopyFrom(from);
    return *this;
  }
  inline MotorCmdStamped& operator=(MotorCmdStamped&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MotorCmdStamped& default_instance() {
    return *reinterpret_cast<const MotorCmdStamped*>(
        &_MotorCmdStamped_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(MotorCmdStamped& a, MotorCmdStamped& b) { a.Swap(&b); }
  inline void Swap(MotorCmdStamped* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MotorCmdStamped* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MotorCmdStamped* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MotorCmdStamped>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MotorCmdStamped& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MotorCmdStamped& from) { MotorCmdStamped::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MotorCmdStamped* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "motor_msg.MotorCmdStamped"; }

 protected:
  explicit MotorCmdStamped(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MotorCmdStamped(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MotorCmdStamped& from);
  MotorCmdStamped(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MotorCmdStamped&& from) noexcept
      : MotorCmdStamped(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeaderFieldNumber = 1,
    kCmdFieldNumber = 2,
  };
  // .std_msg.Header header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::std_msg::Header& header() const;
  [[nodiscard]] ::std_msg::Header* PROTOBUF_NULLABLE release_header();
  ::std_msg::Header* PROTOBUF_NONNULL mutable_header();
  void set_allocated_header(::std_msg::Header* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header(::std_msg::Header* PROTOBUF_NULLABLE value);
  ::std_msg::Header* PROTOBUF_NULLABLE unsafe_arena_release_header();

  private:
  const ::std_msg::Header& _internal_header() const;
  ::std_msg::Header* PROTOBUF_NONNULL _internal_mutable_header();

  public:
  // .motor_msg.MotorCmd cmd = 2;
  bool has_cmd() const;
  void clear_cmd() ;
  const ::motor_msg::MotorCmd& cmd() const;
  [[nodiscard]] ::motor_msg::MotorCmd* PROTOBUF_NULLABLE release_cmd();
  ::motor_msg::MotorCmd* PROTOBUF_NONNULL mutable_cmd();
  void set_allocated_cmd(::motor_msg::MotorCmd* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_cmd(::motor_msg::MotorCmd* PROTOBUF_NULLABLE value);
  ::motor_msg::MotorCmd* PROTOBUF_NULLABLE unsafe_arena_release_cmd();

  private:
  const ::motor_msg::MotorCmd& _internal_cmd() const;
  ::motor_msg::MotorCmd* PROTOBUF_NONNULL _internal_mutable_cmd();

  public:
  // @@protoc_insertion_point(class_scope:motor_msg.MotorCmdStamped)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MotorCmdStamped& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::std_msg::Header* PROTOBUF_NULLABLE header_;
    ::motor_msg::MotorCmd* PROTOBUF_NULLABLE cmd_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Motor_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MotorCmdStamped_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MotorCmd

// float position = 1;
inline void MotorCmd::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float MotorCmd::position() const {
  // @@protoc_insertion_point(field_get:motor_msg.MotorCmd.position)
  return _internal_position();
}
inline void MotorCmd::set_position(float value) {
  _internal_set_position(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:motor_msg.MotorCmd.position)
}
inline float MotorCmd::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.position_;
}
inline void MotorCmd::_internal_set_position(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_ = value;
}

// float torque = 2;
inline void MotorCmd::clear_torque() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.torque_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float MotorCmd::torque() const {
  // @@protoc_insertion_point(field_get:motor_msg.MotorCmd.torque)
  return _internal_torque();
}
inline void MotorCmd::set_torque(float value) {
  _internal_set_torque(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:motor_msg.MotorCmd.torque)
}
inline float MotorCmd::_internal_torque() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.torque_;
}
inline void MotorCmd::_internal_set_torque(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.torque_ = value;
}

// float kp = 3;
inline void MotorCmd::clear_kp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kp_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float MotorCmd::kp() const {
  // @@protoc_insertion_point(field_get:motor_msg.MotorCmd.kp)
  return _internal_kp();
}
inline void MotorCmd::set_kp(float value) {
  _internal_set_kp(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:motor_msg.MotorCmd.kp)
}
inline float MotorCmd::_internal_kp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kp_;
}
inline void MotorCmd::_internal_set_kp(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kp_ = value;
}

// float ki = 4;
inline void MotorCmd::clear_ki() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ki_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float MotorCmd::ki() const {
  // @@protoc_insertion_point(field_get:motor_msg.MotorCmd.ki)
  return _internal_ki();
}
inline void MotorCmd::set_ki(float value) {
  _internal_set_ki(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:motor_msg.MotorCmd.ki)
}
inline float MotorCmd::_internal_ki() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ki_;
}
inline void MotorCmd::_internal_set_ki(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ki_ = value;
}

// float kd = 5;
inline void MotorCmd::clear_kd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kd_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float MotorCmd::kd() const {
  // @@protoc_insertion_point(field_get:motor_msg.MotorCmd.kd)
  return _internal_kd();
}
inline void MotorCmd::set_kd(float value) {
  _internal_set_kd(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:motor_msg.MotorCmd.kd)
}
inline float MotorCmd::_internal_kd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kd_;
}
inline void MotorCmd::_internal_set_kd(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kd_ = value;
}

// -------------------------------------------------------------------

// DcState

// float position = 1;
inline void DcState::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float DcState::position() const {
  // @@protoc_insertion_point(field_get:motor_msg.DcState.position)
  return _internal_position();
}
inline void DcState::set_position(float value) {
  _internal_set_position(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:motor_msg.DcState.position)
}
inline float DcState::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.position_;
}
inline void DcState::_internal_set_position(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_ = value;
}

// float velocity = 2;
inline void DcState::clear_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.velocity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float DcState::velocity() const {
  // @@protoc_insertion_point(field_get:motor_msg.DcState.velocity)
  return _internal_velocity();
}
inline void DcState::set_velocity(float value) {
  _internal_set_velocity(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:motor_msg.DcState.velocity)
}
inline float DcState::_internal_velocity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.velocity_;
}
inline void DcState::_internal_set_velocity(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.velocity_ = value;
}

// float current = 3;
inline void DcState::clear_current() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float DcState::current() const {
  // @@protoc_insertion_point(field_get:motor_msg.DcState.current)
  return _internal_current();
}
inline void DcState::set_current(float value) {
  _internal_set_current(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:motor_msg.DcState.current)
}
inline float DcState::_internal_current() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_;
}
inline void DcState::_internal_set_current(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_ = value;
}

// float torque = 4;
inline void DcState::clear_torque() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.torque_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float DcState::torque() const {
  // @@protoc_insertion_point(field_get:motor_msg.DcState.torque)
  return _internal_torque();
}
inline void DcState::set_torque(float value) {
  _internal_set_torque(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:motor_msg.DcState.torque)
}
inline float DcState::_internal_torque() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.torque_;
}
inline void DcState::_internal_set_torque(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.torque_ = value;
}

// -------------------------------------------------------------------

// ServoCmd

// uint32 bus = 1;
inline void ServoCmd::clear_bus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bus_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t ServoCmd::bus() const {
  // @@protoc_insertion_point(field_get:motor_msg.ServoCmd.bus)
  return _internal_bus();
}
inline void ServoCmd::set_bus(::uint32_t value) {
  _internal_set_bus(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:motor_msg.ServoCmd.bus)
}
inline ::uint32_t ServoCmd::_internal_bus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bus_;
}
inline void ServoCmd::_internal_set_bus(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bus_ = value;
}

// uint32 id = 2;
inline void ServoCmd::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t ServoCmd::id() const {
  // @@protoc_insertion_point(field_get:motor_msg.ServoCmd.id)
  return _internal_id();
}
inline void ServoCmd::set_id(::uint32_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:motor_msg.ServoCmd.id)
}
inline ::uint32_t ServoCmd::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void ServoCmd::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// float position = 3;
inline void ServoCmd::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float ServoCmd::position() const {
  // @@protoc_insertion_point(field_get:motor_msg.ServoCmd.position)
  return _internal_position();
}
inline void ServoCmd::set_position(float value) {
  _internal_set_position(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:motor_msg.ServoCmd.position)
}
inline float ServoCmd::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.position_;
}
inline void ServoCmd::_internal_set_position(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_ = value;
}

// float current_limit = 4;
inline void ServoCmd::clear_current_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_limit_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float ServoCmd::current_limit() const {
  // @@protoc_insertion_point(field_get:motor_msg.ServoCmd.current_limit)
  return _internal_current_limit();
}
inline void ServoCmd::set_current_limit(float value) {
  _internal_set_current_limit(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:motor_msg.ServoCmd.current_limit)
}
inline float ServoCmd::_internal_current_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_limit_;
}
inline void ServoCmd::_internal_set_current_limit(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_limit_ = value;
}

// float kp = 5;
inline void ServoCmd::clear_kp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kp_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float ServoCmd::kp() const {
  // @@protoc_insertion_point(field_get:motor_msg.ServoCmd.kp)
  return _internal_kp();
}
inline void ServoCmd::set_kp(float value) {
  _internal_set_kp(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:motor_msg.ServoCmd.kp)
}
inline float ServoCmd::_internal_kp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kp_;
}
inline void ServoCmd::_internal_set_kp(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kp_ = value;
}

// float ki = 6;
inline void ServoCmd::clear_ki() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ki_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline float ServoCmd::ki() const {
  // @@protoc_insertion_point(field_get:motor_msg.ServoCmd.ki)
  return _internal_ki();
}
inline void ServoCmd::set_ki(float value) {
  _internal_set_ki(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:motor_msg.ServoCmd.ki)
}
inline float ServoCmd::_internal_ki() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ki_;
}
inline void ServoCmd::_internal_set_ki(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ki_ = value;
}

// float kd = 7;
inline void ServoCmd::clear_kd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kd_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline float ServoCmd::kd() const {
  // @@protoc_insertion_point(field_get:motor_msg.ServoCmd.kd)
  return _internal_kd();
}
inline void ServoCmd::set_kd(float value) {
  _internal_set_kd(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:motor_msg.ServoCmd.kd)
}
inline float ServoCmd::_internal_kd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kd_;
}
inline void ServoCmd::_internal_set_kd(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kd_ = value;
}

// -------------------------------------------------------------------

// ServoState

// uint32 bus = 1;
inline void ServoState::clear_bus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bus_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t ServoState::bus() const {
  // @@protoc_insertion_point(field_get:motor_msg.ServoState.bus)
  return _internal_bus();
}
inline void ServoState::set_bus(::uint32_t value) {
  _internal_set_bus(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:motor_msg.ServoState.bus)
}
inline ::uint32_t ServoState::_internal_bus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bus_;
}
inline void ServoState::_internal_set_bus(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bus_ = value;
}

// uint32 id = 2;
inline void ServoState::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t ServoState::id() const {
  // @@protoc_insertion_point(field_get:motor_msg.ServoState.id)
  return _internal_id();
}
inline void ServoState::set_id(::uint32_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:motor_msg.ServoState.id)
}
inline ::uint32_t ServoState::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void ServoState::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// float position = 3;
inline void ServoState::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float ServoState::position() const {
  // @@protoc_insertion_point(field_get:motor_msg.ServoState.position)
  return _internal_position();
}
inline void ServoState::set_position(float value) {
  _internal_set_position(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:motor_msg.ServoState.position)
}
inline float ServoState::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.position_;
}
inline void ServoState::_internal_set_position(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.position_ = value;
}

// float velocity = 4;
inline void ServoState::clear_velocity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.velocity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float ServoState::velocity() const {
  // @@protoc_insertion_point(field_get:motor_msg.ServoState.velocity)
  return _internal_velocity();
}
inline void ServoState::set_velocity(float value) {
  _internal_set_velocity(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:motor_msg.ServoState.velocity)
}
inline float ServoState::_internal_velocity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.velocity_;
}
inline void ServoState::_internal_set_velocity(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.velocity_ = value;
}

// float current = 5;
inline void ServoState::clear_current() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float ServoState::current() const {
  // @@protoc_insertion_point(field_get:motor_msg.ServoState.current)
  return _internal_current();
}
inline void ServoState::set_current(float value) {
  _internal_set_current(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:motor_msg.ServoState.current)
}
inline float ServoState::_internal_current() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_;
}
inline void ServoState::_internal_set_current(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_ = value;
}

// -------------------------------------------------------------------

// LegCmd

// .motor_msg.MotorCmd dc = 1;
inline bool LegCmd::has_dc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dc_ != nullptr);
  return value;
}
inline void LegCmd::clear_dc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dc_ != nullptr) _impl_.dc_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::motor_msg::MotorCmd& LegCmd::_internal_dc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::MotorCmd* p = _impl_.dc_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::MotorCmd&>(::motor_msg::_MotorCmd_default_instance_);
}
inline const ::motor_msg::MotorCmd& LegCmd::dc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.LegCmd.dc)
  return _internal_dc();
}
inline void LegCmd::unsafe_arena_set_allocated_dc(
    ::motor_msg::MotorCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dc_);
  }
  _impl_.dc_ = reinterpret_cast<::motor_msg::MotorCmd*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.LegCmd.dc)
}
inline ::motor_msg::MotorCmd* PROTOBUF_NULLABLE LegCmd::release_dc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::motor_msg::MotorCmd* released = _impl_.dc_;
  _impl_.dc_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::MotorCmd* PROTOBUF_NULLABLE LegCmd::unsafe_arena_release_dc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.LegCmd.dc)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::motor_msg::MotorCmd* temp = _impl_.dc_;
  _impl_.dc_ = nullptr;
  return temp;
}
inline ::motor_msg::MotorCmd* PROTOBUF_NONNULL LegCmd::_internal_mutable_dc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dc_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::MotorCmd>(GetArena());
    _impl_.dc_ = reinterpret_cast<::motor_msg::MotorCmd*>(p);
  }
  return _impl_.dc_;
}
inline ::motor_msg::MotorCmd* PROTOBUF_NONNULL LegCmd::mutable_dc()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::motor_msg::MotorCmd* _msg = _internal_mutable_dc();
  // @@protoc_insertion_point(field_mutable:motor_msg.LegCmd.dc)
  return _msg;
}
inline void LegCmd::set_allocated_dc(::motor_msg::MotorCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dc_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.dc_ = reinterpret_cast<::motor_msg::MotorCmd*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.LegCmd.dc)
}

// .motor_msg.ServoCmd servo = 2;
inline bool LegCmd::has_servo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.servo_ != nullptr);
  return value;
}
inline void LegCmd::clear_servo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.servo_ != nullptr) _impl_.servo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::motor_msg::ServoCmd& LegCmd::_internal_servo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::ServoCmd* p = _impl_.servo_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::ServoCmd&>(::motor_msg::_ServoCmd_default_instance_);
}
inline const ::motor_msg::ServoCmd& LegCmd::servo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.LegCmd.servo)
  return _internal_servo();
}
inline void LegCmd::unsafe_arena_set_allocated_servo(
    ::motor_msg::ServoCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.servo_);
  }
  _impl_.servo_ = reinterpret_cast<::motor_msg::ServoCmd*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.LegCmd.servo)
}
inline ::motor_msg::ServoCmd* PROTOBUF_NULLABLE LegCmd::release_servo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::motor_msg::ServoCmd* released = _impl_.servo_;
  _impl_.servo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::ServoCmd* PROTOBUF_NULLABLE LegCmd::unsafe_arena_release_servo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.LegCmd.servo)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::motor_msg::ServoCmd* temp = _impl_.servo_;
  _impl_.servo_ = nullptr;
  return temp;
}
inline ::motor_msg::ServoCmd* PROTOBUF_NONNULL LegCmd::_internal_mutable_servo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.servo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::ServoCmd>(GetArena());
    _impl_.servo_ = reinterpret_cast<::motor_msg::ServoCmd*>(p);
  }
  return _impl_.servo_;
}
inline ::motor_msg::ServoCmd* PROTOBUF_NONNULL LegCmd::mutable_servo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::motor_msg::ServoCmd* _msg = _internal_mutable_servo();
  // @@protoc_insertion_point(field_mutable:motor_msg.LegCmd.servo)
  return _msg;
}
inline void LegCmd::set_allocated_servo(::motor_msg::ServoCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.servo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.servo_ = reinterpret_cast<::motor_msg::ServoCmd*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.LegCmd.servo)
}

// -------------------------------------------------------------------

// LegState

// .motor_msg.DcState dc = 1;
inline bool LegState::has_dc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dc_ != nullptr);
  return value;
}
inline void LegState::clear_dc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dc_ != nullptr) _impl_.dc_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::motor_msg::DcState& LegState::_internal_dc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::DcState* p = _impl_.dc_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::DcState&>(::motor_msg::_DcState_default_instance_);
}
inline const ::motor_msg::DcState& LegState::dc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.LegState.dc)
  return _internal_dc();
}
inline void LegState::unsafe_arena_set_allocated_dc(
    ::motor_msg::DcState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dc_);
  }
  _impl_.dc_ = reinterpret_cast<::motor_msg::DcState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.LegState.dc)
}
inline ::motor_msg::DcState* PROTOBUF_NULLABLE LegState::release_dc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::motor_msg::DcState* released = _impl_.dc_;
  _impl_.dc_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::DcState* PROTOBUF_NULLABLE LegState::unsafe_arena_release_dc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.LegState.dc)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::motor_msg::DcState* temp = _impl_.dc_;
  _impl_.dc_ = nullptr;
  return temp;
}
inline ::motor_msg::DcState* PROTOBUF_NONNULL LegState::_internal_mutable_dc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dc_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::DcState>(GetArena());
    _impl_.dc_ = reinterpret_cast<::motor_msg::DcState*>(p);
  }
  return _impl_.dc_;
}
inline ::motor_msg::DcState* PROTOBUF_NONNULL LegState::mutable_dc()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::motor_msg::DcState* _msg = _internal_mutable_dc();
  // @@protoc_insertion_point(field_mutable:motor_msg.LegState.dc)
  return _msg;
}
inline void LegState::set_allocated_dc(::motor_msg::DcState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dc_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.dc_ = reinterpret_cast<::motor_msg::DcState*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.LegState.dc)
}

// .motor_msg.ServoState servo = 2;
inline bool LegState::has_servo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.servo_ != nullptr);
  return value;
}
inline void LegState::clear_servo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.servo_ != nullptr) _impl_.servo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::motor_msg::ServoState& LegState::_internal_servo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::ServoState* p = _impl_.servo_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::ServoState&>(::motor_msg::_ServoState_default_instance_);
}
inline const ::motor_msg::ServoState& LegState::servo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.LegState.servo)
  return _internal_servo();
}
inline void LegState::unsafe_arena_set_allocated_servo(
    ::motor_msg::ServoState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.servo_);
  }
  _impl_.servo_ = reinterpret_cast<::motor_msg::ServoState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.LegState.servo)
}
inline ::motor_msg::ServoState* PROTOBUF_NULLABLE LegState::release_servo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::motor_msg::ServoState* released = _impl_.servo_;
  _impl_.servo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::ServoState* PROTOBUF_NULLABLE LegState::unsafe_arena_release_servo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.LegState.servo)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::motor_msg::ServoState* temp = _impl_.servo_;
  _impl_.servo_ = nullptr;
  return temp;
}
inline ::motor_msg::ServoState* PROTOBUF_NONNULL LegState::_internal_mutable_servo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.servo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::ServoState>(GetArena());
    _impl_.servo_ = reinterpret_cast<::motor_msg::ServoState*>(p);
  }
  return _impl_.servo_;
}
inline ::motor_msg::ServoState* PROTOBUF_NONNULL LegState::mutable_servo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::motor_msg::ServoState* _msg = _internal_mutable_servo();
  // @@protoc_insertion_point(field_mutable:motor_msg.LegState.servo)
  return _msg;
}
inline void LegState::set_allocated_servo(::motor_msg::ServoState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.servo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.servo_ = reinterpret_cast<::motor_msg::ServoState*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.LegState.servo)
}

// -------------------------------------------------------------------

// MotorCmdStamped

// .std_msg.Header header = 1;
inline bool MotorCmdStamped::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline const ::std_msg::Header& MotorCmdStamped::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::std_msg::Header* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::std_msg::Header&>(::std_msg::_Header_default_instance_);
}
inline const ::std_msg::Header& MotorCmdStamped::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorCmdStamped.header)
  return _internal_header();
}
inline void MotorCmdStamped::unsafe_arena_set_allocated_header(
    ::std_msg::Header* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::std_msg::Header*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorCmdStamped.header)
}
inline ::std_msg::Header* PROTOBUF_NULLABLE MotorCmdStamped::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::std_msg::Header* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::std_msg::Header* PROTOBUF_NULLABLE MotorCmdStamped::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorCmdStamped.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::std_msg::Header* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::std_msg::Header* PROTOBUF_NONNULL MotorCmdStamped::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::std_msg::Header>(GetArena());
    _impl_.header_ = reinterpret_cast<::std_msg::Header*>(p);
  }
  return _impl_.header_;
}
inline ::std_msg::Header* PROTOBUF_NONNULL MotorCmdStamped::mutable_header()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::std_msg::Header* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorCmdStamped.header)
  return _msg;
}
inline void MotorCmdStamped::set_allocated_header(::std_msg::Header* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::std_msg::Header*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorCmdStamped.header)
}

// .motor_msg.MotorCmd cmd = 2;
inline bool MotorCmdStamped::has_cmd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cmd_ != nullptr);
  return value;
}
inline void MotorCmdStamped::clear_cmd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cmd_ != nullptr) _impl_.cmd_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::motor_msg::MotorCmd& MotorCmdStamped::_internal_cmd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::MotorCmd* p = _impl_.cmd_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::MotorCmd&>(::motor_msg::_MotorCmd_default_instance_);
}
inline const ::motor_msg::MotorCmd& MotorCmdStamped::cmd() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorCmdStamped.cmd)
  return _internal_cmd();
}
inline void MotorCmdStamped::unsafe_arena_set_allocated_cmd(
    ::motor_msg::MotorCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cmd_);
  }
  _impl_.cmd_ = reinterpret_cast<::motor_msg::MotorCmd*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorCmdStamped.cmd)
}
inline ::motor_msg::MotorCmd* PROTOBUF_NULLABLE MotorCmdStamped::release_cmd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::motor_msg::MotorCmd* released = _impl_.cmd_;
  _impl_.cmd_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::MotorCmd* PROTOBUF_NULLABLE MotorCmdStamped::unsafe_arena_release_cmd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorCmdStamped.cmd)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::motor_msg::MotorCmd* temp = _impl_.cmd_;
  _impl_.cmd_ = nullptr;
  return temp;
}
inline ::motor_msg::MotorCmd* PROTOBUF_NONNULL MotorCmdStamped::_internal_mutable_cmd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cmd_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::MotorCmd>(GetArena());
    _impl_.cmd_ = reinterpret_cast<::motor_msg::MotorCmd*>(p);
  }
  return _impl_.cmd_;
}
inline ::motor_msg::MotorCmd* PROTOBUF_NONNULL MotorCmdStamped::mutable_cmd()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::motor_msg::MotorCmd* _msg = _internal_mutable_cmd();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorCmdStamped.cmd)
  return _msg;
}
inline void MotorCmdStamped::set_allocated_cmd(::motor_msg::MotorCmd* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cmd_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.cmd_ = reinterpret_cast<::motor_msg::MotorCmd*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorCmdStamped.cmd)
}

// -------------------------------------------------------------------

// MotorStateStamped

// .std_msg.Header header = 1;
inline bool MotorStateStamped::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline const ::std_msg::Header& MotorStateStamped::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::std_msg::Header* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::std_msg::Header&>(::std_msg::_Header_default_instance_);
}
inline const ::std_msg::Header& MotorStateStamped::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorStateStamped.header)
  return _internal_header();
}
inline void MotorStateStamped::unsafe_arena_set_allocated_header(
    ::std_msg::Header* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::std_msg::Header*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorStateStamped.header)
}
inline ::std_msg::Header* PROTOBUF_NULLABLE MotorStateStamped::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::std_msg::Header* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::std_msg::Header* PROTOBUF_NULLABLE MotorStateStamped::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorStateStamped.header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::std_msg::Header* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::std_msg::Header* PROTOBUF_NONNULL MotorStateStamped::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::std_msg::Header>(GetArena());
    _impl_.header_ = reinterpret_cast<::std_msg::Header*>(p);
  }
  return _impl_.header_;
}
inline ::std_msg::Header* PROTOBUF_NONNULL MotorStateStamped::mutable_header()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::std_msg::Header* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorStateStamped.header)
  return _msg;
}
inline void MotorStateStamped::set_allocated_header(::std_msg::Header* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::std_msg::Header*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorStateStamped.header)
}

// .motor_msg.LegState L1 = 2;
inline bool MotorStateStamped::has_l1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.l1_ != nullptr);
  return value;
}
inline void MotorStateStamped::clear_l1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.l1_ != nullptr) _impl_.l1_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::motor_msg::LegState& MotorStateStamped::_internal_l1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::LegState* p = _impl_.l1_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::LegState&>(::motor_msg::_LegState_default_instance_);
}
inline const ::motor_msg::LegState& MotorStateStamped::l1() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorStateStamped.L1)
  return _internal_l1();
}
inline void MotorStateStamped::unsafe_arena_set_allocated_l1(
    ::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.l1_);
  }
  _impl_.l1_ = reinterpret_cast<::motor_msg::LegState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorStateStamped.L1)
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::release_l1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::motor_msg::LegState* released = _impl_.l1_;
  _impl_.l1_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::unsafe_arena_release_l1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorStateStamped.L1)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::motor_msg::LegState* temp = _impl_.l1_;
  _impl_.l1_ = nullptr;
  return temp;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::_internal_mutable_l1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.l1_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::LegState>(GetArena());
    _impl_.l1_ = reinterpret_cast<::motor_msg::LegState*>(p);
  }
  return _impl_.l1_;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::mutable_l1()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::motor_msg::LegState* _msg = _internal_mutable_l1();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorStateStamped.L1)
  return _msg;
}
inline void MotorStateStamped::set_allocated_l1(::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.l1_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.l1_ = reinterpret_cast<::motor_msg::LegState*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorStateStamped.L1)
}

// .motor_msg.LegState L2 = 3;
inline bool MotorStateStamped::has_l2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.l2_ != nullptr);
  return value;
}
inline void MotorStateStamped::clear_l2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.l2_ != nullptr) _impl_.l2_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::motor_msg::LegState& MotorStateStamped::_internal_l2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::LegState* p = _impl_.l2_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::LegState&>(::motor_msg::_LegState_default_instance_);
}
inline const ::motor_msg::LegState& MotorStateStamped::l2() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorStateStamped.L2)
  return _internal_l2();
}
inline void MotorStateStamped::unsafe_arena_set_allocated_l2(
    ::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.l2_);
  }
  _impl_.l2_ = reinterpret_cast<::motor_msg::LegState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorStateStamped.L2)
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::release_l2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::motor_msg::LegState* released = _impl_.l2_;
  _impl_.l2_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::unsafe_arena_release_l2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorStateStamped.L2)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::motor_msg::LegState* temp = _impl_.l2_;
  _impl_.l2_ = nullptr;
  return temp;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::_internal_mutable_l2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.l2_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::LegState>(GetArena());
    _impl_.l2_ = reinterpret_cast<::motor_msg::LegState*>(p);
  }
  return _impl_.l2_;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::mutable_l2()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::motor_msg::LegState* _msg = _internal_mutable_l2();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorStateStamped.L2)
  return _msg;
}
inline void MotorStateStamped::set_allocated_l2(::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.l2_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.l2_ = reinterpret_cast<::motor_msg::LegState*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorStateStamped.L2)
}

// .motor_msg.LegState L3 = 4;
inline bool MotorStateStamped::has_l3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.l3_ != nullptr);
  return value;
}
inline void MotorStateStamped::clear_l3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.l3_ != nullptr) _impl_.l3_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::motor_msg::LegState& MotorStateStamped::_internal_l3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::LegState* p = _impl_.l3_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::LegState&>(::motor_msg::_LegState_default_instance_);
}
inline const ::motor_msg::LegState& MotorStateStamped::l3() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorStateStamped.L3)
  return _internal_l3();
}
inline void MotorStateStamped::unsafe_arena_set_allocated_l3(
    ::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.l3_);
  }
  _impl_.l3_ = reinterpret_cast<::motor_msg::LegState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorStateStamped.L3)
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::release_l3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::motor_msg::LegState* released = _impl_.l3_;
  _impl_.l3_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::unsafe_arena_release_l3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorStateStamped.L3)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::motor_msg::LegState* temp = _impl_.l3_;
  _impl_.l3_ = nullptr;
  return temp;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::_internal_mutable_l3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.l3_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::LegState>(GetArena());
    _impl_.l3_ = reinterpret_cast<::motor_msg::LegState*>(p);
  }
  return _impl_.l3_;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::mutable_l3()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::motor_msg::LegState* _msg = _internal_mutable_l3();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorStateStamped.L3)
  return _msg;
}
inline void MotorStateStamped::set_allocated_l3(::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.l3_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.l3_ = reinterpret_cast<::motor_msg::LegState*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorStateStamped.L3)
}

// .motor_msg.LegState R1 = 5;
inline bool MotorStateStamped::has_r1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.r1_ != nullptr);
  return value;
}
inline void MotorStateStamped::clear_r1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.r1_ != nullptr) _impl_.r1_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::motor_msg::LegState& MotorStateStamped::_internal_r1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::LegState* p = _impl_.r1_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::LegState&>(::motor_msg::_LegState_default_instance_);
}
inline const ::motor_msg::LegState& MotorStateStamped::r1() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorStateStamped.R1)
  return _internal_r1();
}
inline void MotorStateStamped::unsafe_arena_set_allocated_r1(
    ::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.r1_);
  }
  _impl_.r1_ = reinterpret_cast<::motor_msg::LegState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorStateStamped.R1)
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::release_r1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::motor_msg::LegState* released = _impl_.r1_;
  _impl_.r1_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::unsafe_arena_release_r1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorStateStamped.R1)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::motor_msg::LegState* temp = _impl_.r1_;
  _impl_.r1_ = nullptr;
  return temp;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::_internal_mutable_r1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.r1_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::LegState>(GetArena());
    _impl_.r1_ = reinterpret_cast<::motor_msg::LegState*>(p);
  }
  return _impl_.r1_;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::mutable_r1()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::motor_msg::LegState* _msg = _internal_mutable_r1();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorStateStamped.R1)
  return _msg;
}
inline void MotorStateStamped::set_allocated_r1(::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.r1_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.r1_ = reinterpret_cast<::motor_msg::LegState*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorStateStamped.R1)
}

// .motor_msg.LegState R2 = 6;
inline bool MotorStateStamped::has_r2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.r2_ != nullptr);
  return value;
}
inline void MotorStateStamped::clear_r2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.r2_ != nullptr) _impl_.r2_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::motor_msg::LegState& MotorStateStamped::_internal_r2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::LegState* p = _impl_.r2_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::LegState&>(::motor_msg::_LegState_default_instance_);
}
inline const ::motor_msg::LegState& MotorStateStamped::r2() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorStateStamped.R2)
  return _internal_r2();
}
inline void MotorStateStamped::unsafe_arena_set_allocated_r2(
    ::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.r2_);
  }
  _impl_.r2_ = reinterpret_cast<::motor_msg::LegState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorStateStamped.R2)
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::release_r2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::motor_msg::LegState* released = _impl_.r2_;
  _impl_.r2_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::unsafe_arena_release_r2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorStateStamped.R2)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::motor_msg::LegState* temp = _impl_.r2_;
  _impl_.r2_ = nullptr;
  return temp;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::_internal_mutable_r2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.r2_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::LegState>(GetArena());
    _impl_.r2_ = reinterpret_cast<::motor_msg::LegState*>(p);
  }
  return _impl_.r2_;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::mutable_r2()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::motor_msg::LegState* _msg = _internal_mutable_r2();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorStateStamped.R2)
  return _msg;
}
inline void MotorStateStamped::set_allocated_r2(::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.r2_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.r2_ = reinterpret_cast<::motor_msg::LegState*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorStateStamped.R2)
}

// .motor_msg.LegState R3 = 7;
inline bool MotorStateStamped::has_r3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.r3_ != nullptr);
  return value;
}
inline void MotorStateStamped::clear_r3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.r3_ != nullptr) _impl_.r3_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const ::motor_msg::LegState& MotorStateStamped::_internal_r3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::motor_msg::LegState* p = _impl_.r3_;
  return p != nullptr ? *p : reinterpret_cast<const ::motor_msg::LegState&>(::motor_msg::_LegState_default_instance_);
}
inline const ::motor_msg::LegState& MotorStateStamped::r3() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:motor_msg.MotorStateStamped.R3)
  return _internal_r3();
}
inline void MotorStateStamped::unsafe_arena_set_allocated_r3(
    ::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.r3_);
  }
  _impl_.r3_ = reinterpret_cast<::motor_msg::LegState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:motor_msg.MotorStateStamped.R3)
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::release_r3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::motor_msg::LegState* released = _impl_.r3_;
  _impl_.r3_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::motor_msg::LegState* PROTOBUF_NULLABLE MotorStateStamped::unsafe_arena_release_r3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:motor_msg.MotorStateStamped.R3)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::motor_msg::LegState* temp = _impl_.r3_;
  _impl_.r3_ = nullptr;
  return temp;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::_internal_mutable_r3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.r3_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::motor_msg::LegState>(GetArena());
    _impl_.r3_ = reinterpret_cast<::motor_msg::LegState*>(p);
  }
  return _impl_.r3_;
}
inline ::motor_msg::LegState* PROTOBUF_NONNULL MotorStateStamped::mutable_r3()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::motor_msg::LegState* _msg = _internal_mutable_r3();
  // @@protoc_insertion_point(field_mutable:motor_msg.MotorStateStamped.R3)
  return _msg;
}
inline void MotorStateStamped::set_allocated_r3(::motor_msg::LegState* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.r3_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.r3_ = reinterpret_cast<::motor_msg::LegState*>(value);
  // @@protoc_insertion_point(field_set_allocated:motor_msg.MotorStateStamped.R3)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace motor_msg


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // Motor_2eproto_2epb_2eh
